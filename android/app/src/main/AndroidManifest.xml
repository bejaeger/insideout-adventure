<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.afkcredits"    
    xmlns:tools="http://schemas.android.com/tools"
    >
    <!-- xmlns:tools above needed in order to use tools:replace later with arcore package-->
    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
    <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />
    <uses-permission android:name="android.permission.VIBRATE"/>
    <!-- <uses-permission android:name="android.permission.ACCESS_BACKGROUND_LOCATION"/>  -->
    <!-- <uses-permission android:name="android.permission.CAMERA" /> -->
    <!-- <uses-permission android:name="android.permission.ACTIVITY_RECOGNITION" /> -->
    <uses-permission android:name="android.permission.SCHEDULE_EXACT_ALARM"/>

    <!-- for activity recognition-->
    <!-- <uses-permission android:name="android.permission.ACTIVITY_RECOGNITION" />
    <uses-permission android:name="com.google.android.gms.permission.ACTIVITY_RECOGNITION" /> -->
    <!-- <uses-permission android:name="android.permission.FOREGROUND_SERVICE" /> -->
    
     <!-- For Arcore:  Sceneform requires OpenGL ES 3.0 or later. -->
     <!-- <uses-feature android:glEsVersion="0x00030000" android:required="true" />
     <uses-feature android:name="android.hardware.camera.ar" /> -->

     <!-- needed to allow critical alert and wake up the lock notifications-->
     <uses-permission android:name="android.permission.ACCESS_NOTIFICATION_POLICY"/>
     <uses-permission android:name="android.permission.WAKE_LOCK" />

    <!-- We set allowBackup and fullBackupContent to false in the followingin order for secure storage to work. @see https://pub.dev/packages/flutter_secure_storage -->
   <application   
   android:allowBackup="false"  android:fullBackupContent="false"
        android:icon="@mipmap/launcher_icon" android:label="@string/app_name">
             <meta-data android:name="com.google.android.geo.API_KEY"
                 android:value="AIzaSyDYQLp-49Pp0q0P3YYHl0geNaFQb6Q2DNw"/>
                         <uses-library android:name="com.google.android.maps" />
        <activity
            android:name=".MainActivity"
            android:exported="true"
            android:launchMode="singleTop"
            android:theme="@style/LaunchTheme"
            android:configChanges="orientation|keyboardHidden|keyboard|screenSize|smallestScreenSize|locale|layoutDirection|fontScale|screenLayout|density|uiMode"
            android:hardwareAccelerated="true"
            android:windowSoftInputMode="adjustResize"
            android:showWhenLocked="true"
            android:showOnLockScreen="true"
            android:turnScreenOn="true">
            >
            <!-- Specifies an Android theme to apply to this Activity as soon as
                 the Android process has started. This theme is visible to the user
                 while the Flutter UI initializes. After that, this theme continues
                 to determine the Window background behind the Flutter UI. -->
            <meta-data
              android:name="io.flutter.embedding.android.NormalTheme"
              android:resource="@style/NormalTheme"
              />
            <!-- Displays an Android View that continues showing the launch screen
                 Drawable until Flutter paints its first frame, then this splash
                 screen fades out. A splash screen is useful to avoid any visual
                 gap between the end of Android's launch screen and the painting of
                 Flutter's first frame. -->
            <meta-data
              android:name="io.flutter.embedding.android.SplashScreenDrawable"
              android:resource="@drawable/launch_background"
              />
            <intent-filter>
                <action android:name="android.intent.action.MAIN"/>
                <category android:name="android.intent.category.LAUNCHER"/>
            </intent-filter>

        </activity>

    <!-- for activity recognition-->
    <!-- @see https://pub.dev/packages/activity_recognition_flutter -->
  <!-- <receiver android:name="dk.cachet.activity_recognition_flutter.ActivityRecognizedBroadcastReceiver"/>
  <service
   android:name="dk.cachet.activity_recognition_flutter.ActivityRecognizedService"
   android:permission="android.permission.BIND_JOB_SERVICE"
   android:exported="true"/>
  <service android:name="dk.cachet.activity_recognition_flutter.ForegroundService" />     -->




        <!-- Don't delete the meta-data below.
             This is used by the Flutter tool to generate GeneratedPluginRegistrant.java -->
        <meta-data
            android:name="flutterEmbedding"
            android:value="2" />

    <!-- "AR Optional" app, contains non-AR features that can be used when
         "Google Play Services for AR" (ARCore) is not available. -->
    <meta-data android:name="com.google.ar.core" android:value="optional" tools:replace="android:value" /> 
    <!--android:value="required" /> -->
    </application>


     <!-- needed for url launcher-->
     <!--- @see: https://pub.dev/packages/url_launcher -->
     <!-- Provide required visibility configuration for API level 30 and above -->
     <queries>
          <!-- If your app checks for SMS support -->
          <intent>
               <action android:name="android.intent.action.VIEW" />
               <category android:name="android.intent.category.BROWSABLE" />
               <data android:scheme="https" />
          </intent>
     </queries>
</manifest>

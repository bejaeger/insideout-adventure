// Mocks generated by Mockito 5.0.14 from annotations
// in afkcredits/test/helpers/test_helpers.dart.
// Do not manually edit this file.

import 'dart:async' as _i10;
import 'dart:ui' as _i18;

import 'package:afkcredits/apis/firestore_api.dart' as _i12;
import 'package:afkcredits/datamodels/users/user.dart' as _i2;
import 'package:afkcredits/datamodels/users/user_statistics.dart' as _i4;
import 'package:afkcredits/enums/authentication_method.dart' as _i11;
import 'package:afkcredits/enums/user_role.dart' as _i9;
import 'package:afkcredits/flavor_config.dart' as _i15;
import 'package:afkcredits/services/environment_services.dart' as _i13;
import 'package:afkcredits/services/user_service.dart' as _i8;
import 'package:cloud_firestore/cloud_firestore.dart' as _i5;
import 'package:firebase_auth/firebase_auth.dart' as _i7;
import 'package:flutter/material.dart' as _i17;
import 'package:mockito/mockito.dart' as _i1;
import 'package:places_service/src/models/application_models.dart' as _i6;
import 'package:places_service/src/places_service.dart' as _i14;
import 'package:stacked_firebase_auth/stacked_firebase_auth.dart' as _i3;
import 'package:stacked_services/stacked_services.dart' as _i16;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeUser_0 extends _i1.Fake implements _i2.User {}

class _FakeFirebaseAuthenticationResult_1 extends _i1.Fake
    implements _i3.FirebaseAuthenticationResult {}

class _FakeUserStatistics_2 extends _i1.Fake implements _i4.UserStatistics {}

class _FakeCollectionReference_3 extends _i1.Fake
    implements _i5.CollectionReference {}

class _FakeDocumentReference_4 extends _i1.Fake
    implements _i5.DocumentReference {}

class _FakePlacesLocation_5 extends _i1.Fake implements _i6.PlacesLocation {}

class _FakePlacesDetails_6 extends _i1.Fake implements _i6.PlacesDetails {}

class _FakeFirebaseAuth_7 extends _i1.Fake implements _i7.FirebaseAuth {}

/// A class which mocks [UserService].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserService extends _i1.Mock implements _i8.UserService {
  @override
  _i2.User get currentUser =>
      (super.noSuchMethod(Invocation.getter(#currentUser),
          returnValue: _FakeUser_0()) as _i2.User);
  @override
  bool get hasLoggedInUser => (super
          .noSuchMethod(Invocation.getter(#hasLoggedInUser), returnValue: false)
      as bool);
  @override
  _i9.UserRole get getUserRole =>
      (super.noSuchMethod(Invocation.getter(#getUserRole),
          returnValue: _i9.UserRole.sponsor) as _i9.UserRole);
  @override
  bool get hasRole =>
      (super.noSuchMethod(Invocation.getter(#hasRole), returnValue: false)
          as bool);
  @override
  _i10.Future<void> syncUserAccount() => (super.noSuchMethod(
      Invocation.method(#syncUserAccount, []),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i10.Future<void>);
  @override
  _i10.Future<_i2.User> createUserAccountFromFirebaseUser(
          {_i9.UserRole? role}) =>
      (super.noSuchMethod(
              Invocation.method(
                  #createUserAccountFromFirebaseUser, [], {#role: role}),
              returnValue: Future<_i2.User>.value(_FakeUser_0()))
          as _i10.Future<_i2.User>);
  @override
  _i10.Future<_i2.User> createUserAccount({_i2.User? user}) =>
      (super.noSuchMethod(
              Invocation.method(#createUserAccount, [], {#user: user}),
              returnValue: Future<_i2.User>.value(_FakeUser_0()))
          as _i10.Future<_i2.User>);
  @override
  _i10.Future<_i3.FirebaseAuthenticationResult> runLoginLogic(
          {_i11.AuthenticationMethod? method,
          String? email,
          String? password,
          _i9.UserRole? role}) =>
      (super.noSuchMethod(
              Invocation.method(#runLoginLogic, [], {
                #method: method,
                #email: email,
                #password: password,
                #role: role
              }),
              returnValue: Future<_i3.FirebaseAuthenticationResult>.value(
                  _FakeFirebaseAuthenticationResult_1()))
          as _i10.Future<_i3.FirebaseAuthenticationResult>);
  @override
  _i10.Future<_i3.FirebaseAuthenticationResult> runCreateAccountLogic(
          {_i11.AuthenticationMethod? method,
          _i9.UserRole? role,
          String? fullName,
          String? email,
          String? password}) =>
      (super.noSuchMethod(
              Invocation.method(#runCreateAccountLogic, [], {
                #method: method,
                #role: role,
                #fullName: fullName,
                #email: email,
                #password: password
              }),
              returnValue: Future<_i3.FirebaseAuthenticationResult>.value(
                  _FakeFirebaseAuthenticationResult_1()))
          as _i10.Future<_i3.FirebaseAuthenticationResult>);
  @override
  _i10.Future<dynamic> handleLogoutEvent() =>
      (super.noSuchMethod(Invocation.method(#handleLogoutEvent, []),
          returnValue: Future<dynamic>.value()) as _i10.Future<dynamic>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [FirestoreApi].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirestoreApi extends _i1.Mock implements _i12.FirestoreApi {
  @override
  _i10.Future<void> createUser({_i2.User? user, _i4.UserStatistics? stats}) =>
      (super.noSuchMethod(
              Invocation.method(#createUser, [], {#user: user, #stats: stats}),
              returnValue: Future<void>.value(),
              returnValueForMissingStub: Future<void>.value())
          as _i10.Future<void>);
  @override
  _i10.Future<void> createUserInfo({_i2.User? user}) => (super.noSuchMethod(
      Invocation.method(#createUserInfo, [], {#user: user}),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i10.Future<void>);
  @override
  _i10.Future<void> createUserStatistics(
          {String? uid, _i4.UserStatistics? stats}) =>
      (super.noSuchMethod(
              Invocation.method(
                  #createUserStatistics, [], {#uid: uid, #stats: stats}),
              returnValue: Future<void>.value(),
              returnValueForMissingStub: Future<void>.value())
          as _i10.Future<void>);
  @override
  _i10.Future<_i2.User?> getUser({String? uid}) =>
      (super.noSuchMethod(Invocation.method(#getUser, [], {#uid: uid}),
          returnValue: Future<_i2.User?>.value()) as _i10.Future<_i2.User?>);
  @override
  _i10.Future<_i4.UserStatistics> getUserSummaryStatistics({String? uid}) =>
      (super.noSuchMethod(
              Invocation.method(#getUserSummaryStatistics, [], {#uid: uid}),
              returnValue:
                  Future<_i4.UserStatistics>.value(_FakeUserStatistics_2()))
          as _i10.Future<_i4.UserStatistics>);
  @override
  _i10.Stream<_i4.UserStatistics> getUserSummaryStatisticsStream(
          {String? uid}) =>
      (super.noSuchMethod(
          Invocation.method(#getUserSummaryStatisticsStream, [], {#uid: uid}),
          returnValue:
              Stream<_i4.UserStatistics>.empty()) as _i10
          .Stream<_i4.UserStatistics>);
  @override
  _i10.Future<dynamic> updateUserData({_i2.User? user}) =>
      (super.noSuchMethod(Invocation.method(#updateUserData, [], {#user: user}),
          returnValue: Future<dynamic>.value()) as _i10.Future<dynamic>);
  @override
  _i10.Stream<_i2.User> getUserStream({String? uid}) =>
      (super.noSuchMethod(Invocation.method(#getUserStream, [], {#uid: uid}),
          returnValue: Stream<_i2.User>.empty()) as _i10.Stream<_i2.User>);
  @override
  _i5.CollectionReference getUserStatisticsCollection({String? uid}) =>
      (super.noSuchMethod(
              Invocation.method(#getUserStatisticsCollection, [], {#uid: uid}),
              returnValue: _FakeCollectionReference_3())
          as _i5.CollectionReference);
  @override
  _i5.DocumentReference getUserSummaryStatisticsDocument({String? uid}) =>
      (super.noSuchMethod(
          Invocation.method(#getUserSummaryStatisticsDocument, [], {#uid: uid}),
          returnValue: _FakeDocumentReference_4()) as _i5.DocumentReference);
  @override
  String toString() => super.toString();
}

/// A class which mocks [EnvironmentService].
///
/// See the documentation for Mockito's code generation for more information.
class MockEnvironmentService extends _i1.Mock
    implements _i13.EnvironmentService {
  @override
  _i10.Future<dynamic> initialise() =>
      (super.noSuchMethod(Invocation.method(#initialise, []),
          returnValue: Future<dynamic>.value()) as _i10.Future<dynamic>);
  @override
  String getValue(String? key, {bool? verbose = false}) => (super.noSuchMethod(
      Invocation.method(#getValue, [key], {#verbose: verbose}),
      returnValue: '') as String);
  @override
  String toString() => super.toString();
}

/// A class which mocks [PlacesService].
///
/// See the documentation for Mockito's code generation for more information.
class MockPlacesService extends _i1.Mock implements _i14.PlacesService {
  @override
  _i6.PlacesLocation get currentPosition =>
      (super.noSuchMethod(Invocation.getter(#currentPosition),
          returnValue: _FakePlacesLocation_5()) as _i6.PlacesLocation);
  @override
  void initialize({String? apiKey}) =>
      super.noSuchMethod(Invocation.method(#initialize, [], {#apiKey: apiKey}),
          returnValueForMissingStub: null);
  @override
  _i10.Future<List<_i6.PlacesAutoCompleteResult>> getAutoComplete(
          String? input) =>
      (super.noSuchMethod(Invocation.method(#getAutoComplete, [input]),
              returnValue: Future<List<_i6.PlacesAutoCompleteResult>>.value(
                  <_i6.PlacesAutoCompleteResult>[]))
          as _i10.Future<List<_i6.PlacesAutoCompleteResult>>);
  @override
  _i10.Future<_i6.PlacesDetails> getPlaceDetails(String? placeId) =>
      (super.noSuchMethod(Invocation.method(#getPlaceDetails, [placeId]),
              returnValue:
                  Future<_i6.PlacesDetails>.value(_FakePlacesDetails_6()))
          as _i10.Future<_i6.PlacesDetails>);
  @override
  _i10.Future<dynamic> getPlacesAtCurrentLocation() =>
      (super.noSuchMethod(Invocation.method(#getPlacesAtCurrentLocation, []),
          returnValue: Future<dynamic>.value()) as _i10.Future<dynamic>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [FlavorConfigProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockFlavorConfigProvider extends _i1.Mock
    implements _i15.FlavorConfigProvider {
  @override
  _i15.Flavor get flavor => (super.noSuchMethod(Invocation.getter(#flavor),
      returnValue: _i15.Flavor.unknown) as _i15.Flavor);
  @override
  set flavor(_i15.Flavor? _flavor) =>
      super.noSuchMethod(Invocation.setter(#flavor, _flavor),
          returnValueForMissingStub: null);
  @override
  String get appName =>
      (super.noSuchMethod(Invocation.getter(#appName), returnValue: '')
          as String);
  @override
  void configure(_i15.Flavor? flavorIn) =>
      super.noSuchMethod(Invocation.method(#configure, [flavorIn]),
          returnValueForMissingStub: null);
  @override
  String getTestUserEmail(_i9.UserRole? role) =>
      (super.noSuchMethod(Invocation.method(#getTestUserEmail, [role]),
          returnValue: '') as String);
  @override
  String getTestUserPassword() =>
      (super.noSuchMethod(Invocation.method(#getTestUserPassword, []),
          returnValue: '') as String);
  @override
  String getTestUserId(_i9.UserRole? role) =>
      (super.noSuchMethod(Invocation.method(#getTestUserId, [role]),
          returnValue: '') as String);
  @override
  String toString() => super.toString();
}

/// A class which mocks [NavigationService].
///
/// See the documentation for Mockito's code generation for more information.
class MockNavigationService extends _i1.Mock implements _i16.NavigationService {
  @override
  String get previousRoute =>
      (super.noSuchMethod(Invocation.getter(#previousRoute), returnValue: '')
          as String);
  @override
  String get currentRoute =>
      (super.noSuchMethod(Invocation.getter(#currentRoute), returnValue: '')
          as String);
  @override
  _i17.GlobalKey<_i17.NavigatorState>? nestedNavigationKey(int? index) =>
      (super.noSuchMethod(Invocation.method(#nestedNavigationKey, [index]))
          as _i17.GlobalKey<_i17.NavigatorState>?);
  @override
  void config(
          {bool? enableLog,
          bool? defaultPopGesture,
          bool? defaultOpaqueRoute,
          Duration? defaultDurationTransition,
          bool? defaultGlobalState,
          String? defaultTransition}) =>
      super.noSuchMethod(
          Invocation.method(#config, [], {
            #enableLog: enableLog,
            #defaultPopGesture: defaultPopGesture,
            #defaultOpaqueRoute: defaultOpaqueRoute,
            #defaultDurationTransition: defaultDurationTransition,
            #defaultGlobalState: defaultGlobalState,
            #defaultTransition: defaultTransition
          }),
          returnValueForMissingStub: null);
  @override
  _i10.Future<T?>? navigateWithTransition<T>(_i17.Widget? page,
          {bool? opaque,
          String? transition = r'',
          Duration? duration,
          bool? popGesture,
          int? id,
          _i17.Curve? curve,
          _i16.Bindings? binding,
          bool? fullscreenDialog = false,
          bool? preventDuplicates = true,
          _i16.Transition? transitionClass}) =>
      (super.noSuchMethod(Invocation.method(#navigateWithTransition, [
        page
      ], {
        #opaque: opaque,
        #transition: transition,
        #duration: duration,
        #popGesture: popGesture,
        #id: id,
        #curve: curve,
        #binding: binding,
        #fullscreenDialog: fullscreenDialog,
        #preventDuplicates: preventDuplicates,
        #transitionClass: transitionClass
      })) as _i10.Future<T?>?);
  @override
  _i10.Future<T?>? replaceWithTransition<T>(_i17.Widget? page,
          {bool? opaque,
          String? transition = r'',
          Duration? duration,
          bool? popGesture,
          int? id,
          _i17.Curve? curve,
          _i16.Bindings? binding,
          bool? fullscreenDialog = false,
          bool? preventDuplicates = true,
          _i16.Transition? transitionClass}) =>
      (super.noSuchMethod(Invocation.method(#replaceWithTransition, [
        page
      ], {
        #opaque: opaque,
        #transition: transition,
        #duration: duration,
        #popGesture: popGesture,
        #id: id,
        #curve: curve,
        #binding: binding,
        #fullscreenDialog: fullscreenDialog,
        #preventDuplicates: preventDuplicates,
        #transitionClass: transitionClass
      })) as _i10.Future<T?>?);
  @override
  bool back<T>({T? result, int? id}) => (super.noSuchMethod(
      Invocation.method(#back, [], {#result: result, #id: id}),
      returnValue: false) as bool);
  @override
  void popUntil(_i17.RoutePredicate? predicate) =>
      super.noSuchMethod(Invocation.method(#popUntil, [predicate]),
          returnValueForMissingStub: null);
  @override
  void popRepeated(int? popTimes) =>
      super.noSuchMethod(Invocation.method(#popRepeated, [popTimes]),
          returnValueForMissingStub: null);
  @override
  _i10.Future<T?>? navigateTo<T>(String? routeName,
          {dynamic arguments,
          int? id,
          bool? preventDuplicates = true,
          Map<String, String>? parameters}) =>
      (super.noSuchMethod(Invocation.method(#navigateTo, [
        routeName
      ], {
        #arguments: arguments,
        #id: id,
        #preventDuplicates: preventDuplicates,
        #parameters: parameters
      })) as _i10.Future<T?>?);
  @override
  _i10.Future<T?>? navigateToView<T>(_i17.Widget? view,
          {dynamic arguments,
          int? id,
          bool? opaque,
          _i17.Curve? curve,
          _i16.Bindings? binding,
          Duration? duration,
          bool? fullscreenDialog = false,
          bool? popGesture,
          bool? preventDuplicates = true,
          _i16.Transition? transition}) =>
      (super.noSuchMethod(Invocation.method(#navigateToView, [
        view
      ], {
        #arguments: arguments,
        #id: id,
        #opaque: opaque,
        #curve: curve,
        #binding: binding,
        #duration: duration,
        #fullscreenDialog: fullscreenDialog,
        #popGesture: popGesture,
        #preventDuplicates: preventDuplicates,
        #transition: transition
      })) as _i10.Future<T?>?);
  @override
  _i10.Future<T?>? replaceWith<T>(String? routeName,
          {dynamic arguments,
          int? id,
          bool? preventDuplicates = true,
          Map<String, String>? parameters}) =>
      (super.noSuchMethod(Invocation.method(#replaceWith, [
        routeName
      ], {
        #arguments: arguments,
        #id: id,
        #preventDuplicates: preventDuplicates,
        #parameters: parameters
      })) as _i10.Future<T?>?);
  @override
  _i10.Future<T?>? clearStackAndShow<T>(String? routeName,
          {dynamic arguments, int? id, Map<String, String>? parameters}) =>
      (super.noSuchMethod(Invocation.method(#clearStackAndShow, [
        routeName
      ], {
        #arguments: arguments,
        #id: id,
        #parameters: parameters
      })) as _i10.Future<T?>?);
  @override
  _i10.Future<T?>? clearTillFirstAndShow<T>(String? routeName,
          {dynamic arguments,
          int? id,
          bool? preventDuplicates = true,
          Map<String, String>? parameters}) =>
      (super.noSuchMethod(Invocation.method(#clearTillFirstAndShow, [
        routeName
      ], {
        #arguments: arguments,
        #id: id,
        #preventDuplicates: preventDuplicates,
        #parameters: parameters
      })) as _i10.Future<T?>?);
  @override
  _i10.Future<T?>? clearTillFirstAndShowView<T>(_i17.Widget? view,
          {dynamic arguments, int? id}) =>
      (super.noSuchMethod(Invocation.method(#clearTillFirstAndShowView, [view],
          {#arguments: arguments, #id: id})) as _i10.Future<T?>?);
  @override
  _i10.Future<T?>? pushNamedAndRemoveUntil<T>(String? routeName,
          {_i17.RoutePredicate? predicate, dynamic arguments, int? id}) =>
      (super.noSuchMethod(Invocation.method(#pushNamedAndRemoveUntil, [
        routeName
      ], {
        #predicate: predicate,
        #arguments: arguments,
        #id: id
      })) as _i10.Future<T?>?);
  @override
  String toString() => super.toString();
}

/// A class which mocks [DialogService].
///
/// See the documentation for Mockito's code generation for more information.
class MockDialogService extends _i1.Mock implements _i16.DialogService {
  @override
  void registerCustomDialogBuilders(
          Map<dynamic, _i16.DialogBuilder>? builders) =>
      super.noSuchMethod(
          Invocation.method(#registerCustomDialogBuilders, [builders]),
          returnValueForMissingStub: null);
  @override
  void registerCustomDialogBuilder(
          {dynamic variant,
          _i17.Widget Function(_i17.BuildContext, _i16.DialogRequest<dynamic>,
                  dynamic Function(_i16.DialogResponse<dynamic>))?
              builder}) =>
      super.noSuchMethod(
          Invocation.method(#registerCustomDialogBuilder, [],
              {#variant: variant, #builder: builder}),
          returnValueForMissingStub: null);
  @override
  _i10.Future<_i16.DialogResponse<dynamic>?> showDialog(
          {String? title,
          String? description,
          String? cancelTitle,
          _i18.Color? cancelTitleColor,
          String? buttonTitle = r'Ok',
          _i18.Color? buttonTitleColor,
          bool? barrierDismissible = false,
          _i16.DialogPlatform? dialogPlatform}) =>
      (super.noSuchMethod(
              Invocation.method(#showDialog, [], {
                #title: title,
                #description: description,
                #cancelTitle: cancelTitle,
                #cancelTitleColor: cancelTitleColor,
                #buttonTitle: buttonTitle,
                #buttonTitleColor: buttonTitleColor,
                #barrierDismissible: barrierDismissible,
                #dialogPlatform: dialogPlatform
              }),
              returnValue: Future<_i16.DialogResponse<dynamic>?>.value())
          as _i10.Future<_i16.DialogResponse<dynamic>?>);
  @override
  _i10.Future<_i16.DialogResponse<T>?> showCustomDialog<T, R>(
          {dynamic variant,
          String? title,
          String? description,
          bool? hasImage = false,
          String? imageUrl,
          bool? showIconInMainButton = false,
          String? mainButtonTitle,
          bool? showIconInSecondaryButton = false,
          String? secondaryButtonTitle,
          bool? showIconInAdditionalButton = false,
          String? additionalButtonTitle,
          bool? takesInput = false,
          _i18.Color? barrierColor = const _i18.Color(2315255808),
          bool? barrierDismissible = false,
          String? barrierLabel = r'',
          dynamic customData,
          R? data}) =>
      (super.noSuchMethod(
              Invocation.method(#showCustomDialog, [], {
                #variant: variant,
                #title: title,
                #description: description,
                #hasImage: hasImage,
                #imageUrl: imageUrl,
                #showIconInMainButton: showIconInMainButton,
                #mainButtonTitle: mainButtonTitle,
                #showIconInSecondaryButton: showIconInSecondaryButton,
                #secondaryButtonTitle: secondaryButtonTitle,
                #showIconInAdditionalButton: showIconInAdditionalButton,
                #additionalButtonTitle: additionalButtonTitle,
                #takesInput: takesInput,
                #barrierColor: barrierColor,
                #barrierDismissible: barrierDismissible,
                #barrierLabel: barrierLabel,
                #customData: customData,
                #data: data
              }),
              returnValue: Future<_i16.DialogResponse<T>?>.value())
          as _i10.Future<_i16.DialogResponse<T>?>);
  @override
  _i10.Future<_i16.DialogResponse<dynamic>?> showConfirmationDialog(
          {String? title,
          String? description,
          String? cancelTitle = r'Cancel',
          String? confirmationTitle = r'Ok',
          bool? barrierDismissible = false,
          _i16.DialogPlatform? dialogPlatform}) =>
      (super.noSuchMethod(
              Invocation.method(#showConfirmationDialog, [], {
                #title: title,
                #description: description,
                #cancelTitle: cancelTitle,
                #confirmationTitle: confirmationTitle,
                #barrierDismissible: barrierDismissible,
                #dialogPlatform: dialogPlatform
              }),
              returnValue: Future<_i16.DialogResponse<dynamic>?>.value())
          as _i10.Future<_i16.DialogResponse<dynamic>?>);
  @override
  void completeDialog(_i16.DialogResponse<dynamic>? response) =>
      super.noSuchMethod(Invocation.method(#completeDialog, [response]),
          returnValueForMissingStub: null);
  @override
  String toString() => super.toString();
}

/// A class which mocks [FirebaseAuthenticationService].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirebaseAuthenticationService extends _i1.Mock
    implements _i3.FirebaseAuthenticationService {
  @override
  _i7.FirebaseAuth get firebaseAuth =>
      (super.noSuchMethod(Invocation.getter(#firebaseAuth),
          returnValue: _FakeFirebaseAuth_7()) as _i7.FirebaseAuth);
  @override
  bool get hasUser =>
      (super.noSuchMethod(Invocation.getter(#hasUser), returnValue: false)
          as bool);
  @override
  _i10.Stream<_i7.User?> get authStateChanges =>
      (super.noSuchMethod(Invocation.getter(#authStateChanges),
          returnValue: Stream<_i7.User?>.empty()) as _i10.Stream<_i7.User?>);
  @override
  _i10.Future<bool> emailExists(String? email) =>
      (super.noSuchMethod(Invocation.method(#emailExists, [email]),
          returnValue: Future<bool>.value(false)) as _i10.Future<bool>);
  @override
  _i10.Future<_i3.FirebaseAuthenticationResult> signInWithGoogle() =>
      (super.noSuchMethod(Invocation.method(#signInWithGoogle, []),
              returnValue: Future<_i3.FirebaseAuthenticationResult>.value(
                  _FakeFirebaseAuthenticationResult_1()))
          as _i10.Future<_i3.FirebaseAuthenticationResult>);
  @override
  _i10.Future<bool> isAppleSignInAvailable() =>
      (super.noSuchMethod(Invocation.method(#isAppleSignInAvailable, []),
          returnValue: Future<bool>.value(false)) as _i10.Future<bool>);
  @override
  _i10.Future<_i3.FirebaseAuthenticationResult> signInWithApple(
          {String? appleRedirectUri, String? appleClientId}) =>
      (super.noSuchMethod(
              Invocation.method(#signInWithApple, [], {
                #appleRedirectUri: appleRedirectUri,
                #appleClientId: appleClientId
              }),
              returnValue: Future<_i3.FirebaseAuthenticationResult>.value(
                  _FakeFirebaseAuthenticationResult_1()))
          as _i10.Future<_i3.FirebaseAuthenticationResult>);
  @override
  _i10.Future<_i3.FirebaseAuthenticationResult> loginAnonymously() =>
      (super.noSuchMethod(Invocation.method(#loginAnonymously, []),
              returnValue: Future<_i3.FirebaseAuthenticationResult>.value(
                  _FakeFirebaseAuthenticationResult_1()))
          as _i10.Future<_i3.FirebaseAuthenticationResult>);
  @override
  _i10.Future<_i3.FirebaseAuthenticationResult> loginWithEmail(
          {String? email, String? password}) =>
      (super.noSuchMethod(
              Invocation.method(
                  #loginWithEmail, [], {#email: email, #password: password}),
              returnValue: Future<_i3.FirebaseAuthenticationResult>.value(
                  _FakeFirebaseAuthenticationResult_1()))
          as _i10.Future<_i3.FirebaseAuthenticationResult>);
  @override
  _i10.Future<_i3.FirebaseAuthenticationResult> createAccountWithEmail(
          {String? email, String? password}) =>
      (super.noSuchMethod(
              Invocation.method(#createAccountWithEmail, [],
                  {#email: email, #password: password}),
              returnValue: Future<_i3.FirebaseAuthenticationResult>.value(
                  _FakeFirebaseAuthenticationResult_1()))
          as _i10.Future<_i3.FirebaseAuthenticationResult>);
  @override
  _i10.Future<dynamic> logout() =>
      (super.noSuchMethod(Invocation.method(#logout, []),
          returnValue: Future<dynamic>.value()) as _i10.Future<dynamic>);
  @override
  _i10.Future<dynamic> sendResetPasswordLink(String? email) =>
      (super.noSuchMethod(Invocation.method(#sendResetPasswordLink, [email]),
          returnValue: Future<dynamic>.value()) as _i10.Future<dynamic>);
  @override
  _i10.Future<dynamic> validatePassword(String? password) =>
      (super.noSuchMethod(Invocation.method(#validatePassword, [password]),
          returnValue: Future<dynamic>.value()) as _i10.Future<dynamic>);
  @override
  _i10.Future<dynamic> updatePassword(String? password) =>
      (super.noSuchMethod(Invocation.method(#updatePassword, [password]),
          returnValue: Future<dynamic>.value()) as _i10.Future<dynamic>);
  @override
  _i10.Future<dynamic> updateEmail(String? email) =>
      (super.noSuchMethod(Invocation.method(#updateEmail, [email]),
          returnValue: Future<dynamic>.value()) as _i10.Future<dynamic>);
  @override
  String generateNonce([int? length = 32]) =>
      (super.noSuchMethod(Invocation.method(#generateNonce, [length]),
          returnValue: '') as String);
  @override
  String sha256ofString(String? input) =>
      (super.noSuchMethod(Invocation.method(#sha256ofString, [input]),
          returnValue: '') as String);
  @override
  String toString() => super.toString();
}

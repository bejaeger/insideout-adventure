// Mocks generated by Mockito 5.0.14 from annotations
// in afkcredits/test/helpers/test_helpers.dart.
// Do not manually edit this file.

import 'dart:async' as _i17;
import 'dart:ui' as _i44;

import 'package:afkcredits/apis/cloud_functions_api.dart' as _i27;
import 'package:afkcredits/apis/firestore_api.dart' as _i20;
import 'package:afkcredits/datamodels/giftcards/gift_card_category/gift_card_category.dart'
    as _i25;
import 'package:afkcredits/datamodels/giftcards/gift_card_purchase/gift_card_purchase.dart'
    as _i26;
import 'package:afkcredits/datamodels/payments/money_transfer.dart' as _i22;
import 'package:afkcredits/datamodels/payments/money_transfer_query_config.dart'
    as _i23;
import 'package:afkcredits/datamodels/quests/active_quests/activated_quest.dart'
    as _i10;
import 'package:afkcredits/datamodels/quests/markers/afk_marker.dart' as _i11;
import 'package:afkcredits/datamodels/quests/quest.dart' as _i24;
import 'package:afkcredits/datamodels/users/favorite_places/user_fav_places.dart'
    as _i19;
import 'package:afkcredits/datamodels/users/public_info/public_user_info.dart'
    as _i21;
import 'package:afkcredits/datamodels/users/sponsor_reference/sponsor_reference.dart'
    as _i15;
import 'package:afkcredits/datamodels/users/statistics/user_statistics.dart'
    as _i4;
import 'package:afkcredits/datamodels/users/user.dart' as _i3;
import 'package:afkcredits/enums/authentication_method.dart' as _i18;
import 'package:afkcredits/enums/user_role.dart' as _i16;
import 'package:afkcredits/flavor_config.dart' as _i30;
import 'package:afkcredits/services/environment_services.dart' as _i28;
import 'package:afkcredits/services/geolocation/geolocation_service.dart'
    as _i35;
import 'package:afkcredits/services/giftcard/gift_card_service.dart' as _i40;
import 'package:afkcredits/services/layout/layout_service.dart' as _i33;
import 'package:afkcredits/services/local_storage_service.dart' as _i31;
import 'package:afkcredits/services/markers/marker_service.dart' as _i38;
import 'package:afkcredits/services/payments/transfers_history_service.dart'
    as _i34;
import 'package:afkcredits/services/qrcodes/qrcode_service.dart' as _i39;
import 'package:afkcredits/services/quests/quest_qrcode_scan_result.dart'
    as _i9;
import 'package:afkcredits/services/quests/quest_service.dart' as _i36;
import 'package:afkcredits/services/quests/stopwatch_service.dart' as _i37;
import 'package:afkcredits/services/users/afkcredits_authentication_result_service.dart'
    as _i5;
import 'package:afkcredits/services/users/user_service.dart' as _i14;
import 'package:cloud_firestore/cloud_firestore.dart' as _i6;
import 'package:firebase_auth/firebase_auth.dart' as _i12;
import 'package:flutter/material.dart' as _i42;
import 'package:flutter_secure_storage/flutter_secure_storage.dart' as _i32;
import 'package:get/get.dart' as _i43;
import 'package:logger/logger.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:places_service/src/models/application_models.dart' as _i7;
import 'package:places_service/src/places_service.dart' as _i29;
import 'package:rxdart/rxdart.dart' as _i8;
import 'package:stacked_firebase_auth/stacked_firebase_auth.dart' as _i13;
import 'package:stacked_services/stacked_services.dart' as _i41;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeLogger_0 extends _i1.Fake implements _i2.Logger {}

class _FakeUser_1 extends _i1.Fake implements _i3.User {}

class _FakeUserStatistics_2 extends _i1.Fake implements _i4.UserStatistics {}

class _FakeAFKCreditsAuthenticationResultService_3 extends _i1.Fake
    implements _i5.AFKCreditsAuthenticationResultService {}

class _FakeFirebaseFirestore_4 extends _i1.Fake
    implements _i6.FirebaseFirestore {}

class _FakeDocumentReference_5 extends _i1.Fake
    implements _i6.DocumentReference {}

class _FakePlacesLocation_6 extends _i1.Fake implements _i7.PlacesLocation {}

class _FakePlacesDetails_7 extends _i1.Fake implements _i7.PlacesDetails {}

class _FakeBehaviorSubject_8<T> extends _i1.Fake
    implements _i8.BehaviorSubject<T> {}

class _FakeQuestQRCodeScanResult_9 extends _i1.Fake
    implements _i9.QuestQRCodeScanResult {}

class _FakeActivatedQuest_10 extends _i1.Fake implements _i10.ActivatedQuest {}

class _FakeAFKMarker_11 extends _i1.Fake implements _i11.AFKMarker {}

class _FakeFirebaseAuth_12 extends _i1.Fake implements _i12.FirebaseAuth {}

class _FakeFirebaseAuthenticationResult_13 extends _i1.Fake
    implements _i13.FirebaseAuthenticationResult {}

/// A class which mocks [UserService].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserService extends _i1.Mock implements _i14.UserService {
  @override
  _i2.Logger get log =>
      (super.noSuchMethod(Invocation.getter(#log), returnValue: _FakeLogger_0())
          as _i2.Logger);
  @override
  set sponsorReference(_i15.SponsorReference? _sponsorReference) => super
      .noSuchMethod(Invocation.setter(#sponsorReference, _sponsorReference),
          returnValueForMissingStub: null);
  @override
  Map<String, _i3.User> get supportedExplorers =>
      (super.noSuchMethod(Invocation.getter(#supportedExplorers),
          returnValue: <String, _i3.User>{}) as Map<String, _i3.User>);
  @override
  set supportedExplorers(Map<String, _i3.User>? _supportedExplorers) => super
      .noSuchMethod(Invocation.setter(#supportedExplorers, _supportedExplorers),
          returnValueForMissingStub: null);
  @override
  Map<String, _i4.UserStatistics> get supportedExplorerStats =>
      (super.noSuchMethod(Invocation.getter(#supportedExplorerStats),
              returnValue: <String, _i4.UserStatistics>{})
          as Map<String, _i4.UserStatistics>);
  @override
  set supportedExplorerStats(
          Map<String, _i4.UserStatistics>? _supportedExplorerStats) =>
      super.noSuchMethod(
          Invocation.setter(#supportedExplorerStats, _supportedExplorerStats),
          returnValueForMissingStub: null);
  @override
  _i3.User get currentUser =>
      (super.noSuchMethod(Invocation.getter(#currentUser),
          returnValue: _FakeUser_1()) as _i3.User);
  @override
  _i4.UserStatistics get currentUserStats =>
      (super.noSuchMethod(Invocation.getter(#currentUserStats),
          returnValue: _FakeUserStatistics_2()) as _i4.UserStatistics);
  @override
  bool get hasLoggedInUser => (super
          .noSuchMethod(Invocation.getter(#hasLoggedInUser), returnValue: false)
      as bool);
  @override
  _i16.UserRole get getUserRole =>
      (super.noSuchMethod(Invocation.getter(#getUserRole),
          returnValue: _i16.UserRole.sponsor) as _i16.UserRole);
  @override
  bool get hasRole =>
      (super.noSuchMethod(Invocation.getter(#hasRole), returnValue: false)
          as bool);
  @override
  List<_i3.User> get supportedExplorersList =>
      (super.noSuchMethod(Invocation.getter(#supportedExplorersList),
          returnValue: <_i3.User>[]) as List<_i3.User>);
  @override
  _i17.Future<void> syncUserAccount(
          {String? uid, bool? fromLocalStorage = false}) =>
      (super.noSuchMethod(
              Invocation.method(#syncUserAccount, [],
                  {#uid: uid, #fromLocalStorage: fromLocalStorage}),
              returnValue: Future<void>.value(),
              returnValueForMissingStub: Future<void>.value())
          as _i17.Future<void>);
  @override
  _i17.Future<_i3.User> createUserAccountFromFirebaseUser(
          {_i16.UserRole? role, _i18.AuthenticationMethod? authMethod}) =>
      (super.noSuchMethod(
              Invocation.method(#createUserAccountFromFirebaseUser, [],
                  {#role: role, #authMethod: authMethod}),
              returnValue: Future<_i3.User>.value(_FakeUser_1()))
          as _i17.Future<_i3.User>);
  @override
  _i17.Future<_i3.User> createUserAccount({_i3.User? user}) =>
      (super.noSuchMethod(
              Invocation.method(#createUserAccount, [], {#user: user}),
              returnValue: Future<_i3.User>.value(_FakeUser_1()))
          as _i17.Future<_i3.User>);
  @override
  _i17.Future<void> createUserFavouritePlaces(
          {String? userId, _i19.UserFavPlaces? favouritePlaces}) =>
      (super.noSuchMethod(
              Invocation.method(#createUserFavouritePlaces, [],
                  {#userId: userId, #favouritePlaces: favouritePlaces}),
              returnValue: Future<void>.value(),
              returnValueForMissingStub: Future<void>.value())
          as _i17.Future<void>);
  @override
  _i17.Future<List<_i19.UserFavPlaces>?> getUserFavouritePlaces(
          {String? userId}) =>
      (super.noSuchMethod(
              Invocation.method(#getUserFavouritePlaces, [], {#userId: userId}),
              returnValue: Future<List<_i19.UserFavPlaces>?>.value())
          as _i17.Future<List<_i19.UserFavPlaces>?>);
  @override
  _i17.Future<String?> getLocallyLoggedInUserId() =>
      (super.noSuchMethod(Invocation.method(#getLocallyLoggedInUserId, []),
          returnValue: Future<String?>.value()) as _i17.Future<String?>);
  @override
  _i17.Future<_i5.AFKCreditsAuthenticationResultService> runLoginLogic(
          {_i18.AuthenticationMethod? method,
          String? emailOrName,
          String? stringPw,
          String? hashedPw,
          _i16.UserRole? role}) =>
      (super.noSuchMethod(
          Invocation.method(#runLoginLogic, [], {
            #method: method,
            #emailOrName: emailOrName,
            #stringPw: stringPw,
            #hashedPw: hashedPw,
            #role: role
          }),
          returnValue: Future<_i5.AFKCreditsAuthenticationResultService>.value(
              _FakeAFKCreditsAuthenticationResultService_3())) as _i17
          .Future<_i5.AFKCreditsAuthenticationResultService>);
  @override
  _i17.Future<_i5.AFKCreditsAuthenticationResultService> runCreateAccountLogic(
          {_i18.AuthenticationMethod? method,
          _i16.UserRole? role,
          String? fullName,
          String? email,
          String? password}) =>
      (super.noSuchMethod(
          Invocation.method(#runCreateAccountLogic, [], {
            #method: method,
            #role: role,
            #fullName: fullName,
            #email: email,
            #password: password
          }),
          returnValue: Future<_i5.AFKCreditsAuthenticationResultService>.value(
              _FakeAFKCreditsAuthenticationResultService_3())) as _i17
          .Future<_i5.AFKCreditsAuthenticationResultService>);
  @override
  bool isSupportedExplorer({String? uid}) => (super.noSuchMethod(
      Invocation.method(#isSupportedExplorer, [], {#uid: uid}),
      returnValue: false) as bool);
  @override
  _i17.Future<dynamic> createExplorerAccount(
          {String? name,
          String? password,
          _i18.AuthenticationMethod? authMethod}) =>
      (super.noSuchMethod(
          Invocation.method(#createExplorerAccount, [],
              {#name: name, #password: password, #authMethod: authMethod}),
          returnValue: Future<dynamic>.value()) as _i17.Future<dynamic>);
  @override
  _i17.Future<dynamic> addExplorerToSupportedExplorers({String? uid}) =>
      (super.noSuchMethod(
          Invocation.method(#addExplorerToSupportedExplorers, [], {#uid: uid}),
          returnValue: Future<dynamic>.value()) as _i17.Future<dynamic>);
  @override
  void setupUserDataListeners(
          {_i17.Completer<void>? completer, void Function()? callback}) =>
      super.noSuchMethod(
          Invocation.method(#setupUserDataListeners, [],
              {#completer: completer, #callback: callback}),
          returnValueForMissingStub: null);
  @override
  _i17.Future<void> addExplorerStatsListeners(
          {List<String>? explorerIds, void Function()? callback}) =>
      (super.noSuchMethod(
              Invocation.method(#addExplorerStatsListeners, [],
                  {#explorerIds: explorerIds, #callback: callback}),
              returnValue: Future<void>.value(),
              returnValueForMissingStub: Future<void>.value())
          as _i17.Future<void>);
  @override
  _i17.Future<dynamic> addExplorerStatListener(
          {String? explorerId, void Function()? callback}) =>
      (super.noSuchMethod(
          Invocation.method(#addExplorerStatListener, [],
              {#explorerId: explorerId, #callback: callback}),
          returnValue: Future<dynamic>.value()) as _i17.Future<dynamic>);
  @override
  _i17.Future<dynamic> validateSponsorPin({String? pin}) => (super.noSuchMethod(
      Invocation.method(#validateSponsorPin, [], {#pin: pin}),
      returnValue: Future<dynamic>.value()) as _i17.Future<dynamic>);
  @override
  _i17.Future<dynamic> saveSponsorReference(
          {String? uid, _i18.AuthenticationMethod? authMethod, String? pin}) =>
      (super.noSuchMethod(
          Invocation.method(#saveSponsorReference, [],
              {#uid: uid, #authMethod: authMethod, #pin: pin}),
          returnValue: Future<dynamic>.value()) as _i17.Future<dynamic>);
  @override
  _i17.Future<dynamic> clearSponsorReference() =>
      (super.noSuchMethod(Invocation.method(#clearSponsorReference, []),
          returnValue: Future<dynamic>.value()) as _i17.Future<dynamic>);
  @override
  void removeFromExplorerLists({String? uid}) => super.noSuchMethod(
      Invocation.method(#removeFromExplorerLists, [], {#uid: uid}),
      returnValueForMissingStub: null);
  @override
  List<String> addToSupportedExplorersList({String? uid}) =>
      (super.noSuchMethod(
          Invocation.method(#addToSupportedExplorersList, [], {#uid: uid}),
          returnValue: <String>[]) as List<String>);
  @override
  bool isMatchingPasswords(
          {String? hashedPw1, String? stringPw2, String? hashedPw2}) =>
      (super.noSuchMethod(
          Invocation.method(#isMatchingPasswords, [], {
            #hashedPw1: hashedPw1,
            #stringPw2: stringPw2,
            #hashedPw2: hashedPw2
          }),
          returnValue: false) as bool);
  @override
  String hashPassword(String? pw) => (super
          .noSuchMethod(Invocation.method(#hashPassword, [pw]), returnValue: '')
      as String);
  @override
  _i17.Future<dynamic> updateUserData({_i3.User? user}) =>
      (super.noSuchMethod(Invocation.method(#updateUserData, [], {#user: user}),
          returnValue: Future<dynamic>.value()) as _i17.Future<dynamic>);
  @override
  _i17.Future<dynamic> addSponsorIdToOtherUser(
          {String? otherUsersId, String? sponsorId}) =>
      (super.noSuchMethod(
          Invocation.method(#addSponsorIdToOtherUser, [],
              {#otherUsersId: otherUsersId, #sponsorId: sponsorId}),
          returnValue: Future<dynamic>.value()) as _i17.Future<dynamic>);
  @override
  _i17.Future<dynamic> isUserAlreadyPresent({dynamic name}) => (super
      .noSuchMethod(Invocation.method(#isUserAlreadyPresent, [], {#name: name}),
          returnValue: Future<dynamic>.value()) as _i17.Future<dynamic>);
  @override
  void cancelExplorerStatsListener({String? uid}) => super.noSuchMethod(
      Invocation.method(#cancelExplorerStatsListener, [], {#uid: uid}),
      returnValueForMissingStub: null);
  @override
  _i17.Future<dynamic> handleLogoutEvent({bool? logOutFromFirebase = true}) =>
      (super.noSuchMethod(
          Invocation.method(#handleLogoutEvent, [],
              {#logOutFromFirebase: logOutFromFirebase}),
          returnValue: Future<dynamic>.value()) as _i17.Future<dynamic>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [FirestoreApi].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirestoreApi extends _i1.Mock implements _i20.FirestoreApi {
  @override
  _i2.Logger get log =>
      (super.noSuchMethod(Invocation.getter(#log), returnValue: _FakeLogger_0())
          as _i2.Logger);
  @override
  _i6.FirebaseFirestore get firestoreInstance =>
      (super.noSuchMethod(Invocation.getter(#firestoreInstance),
          returnValue: _FakeFirebaseFirestore_4()) as _i6.FirebaseFirestore);
  @override
  _i17.Future<void> createUser({_i3.User? user, _i4.UserStatistics? stats}) =>
      (super.noSuchMethod(
              Invocation.method(#createUser, [], {#user: user, #stats: stats}),
              returnValue: Future<void>.value(),
              returnValueForMissingStub: Future<void>.value())
          as _i17.Future<void>);
  @override
  _i17.Future<void> createUserInfo({_i3.User? user}) => (super.noSuchMethod(
      Invocation.method(#createUserInfo, [], {#user: user}),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i17.Future<void>);
  @override
  _i17.Future<void> createUserStatistics(
          {String? uid, _i4.UserStatistics? stats}) =>
      (super.noSuchMethod(
              Invocation.method(
                  #createUserStatistics, [], {#uid: uid, #stats: stats}),
              returnValue: Future<void>.value(),
              returnValueForMissingStub: Future<void>.value())
          as _i17.Future<void>);
  @override
  _i17.Future<void> createUserFavouritePlaces(
          {dynamic userId, _i19.UserFavPlaces? favouritePlaces}) =>
      (super.noSuchMethod(
              Invocation.method(#createUserFavouritePlaces, [],
                  {#userId: userId, #favouritePlaces: favouritePlaces}),
              returnValue: Future<void>.value(),
              returnValueForMissingStub: Future<void>.value())
          as _i17.Future<void>);
  @override
  _i17.Future<void> addMarkers({_i11.AFKMarker? markers}) => (super
          .noSuchMethod(Invocation.method(#addMarkers, [], {#markers: markers}),
              returnValue: Future<void>.value(),
              returnValueForMissingStub: Future<void>.value())
      as _i17.Future<void>);
  @override
  _i6.DocumentReference createUserDocument() =>
      (super.noSuchMethod(Invocation.method(#createUserDocument, []),
          returnValue: _FakeDocumentReference_5()) as _i6.DocumentReference);
  @override
  _i17.Future<_i3.User?> getUser({String? uid}) =>
      (super.noSuchMethod(Invocation.method(#getUser, [], {#uid: uid}),
          returnValue: Future<_i3.User?>.value()) as _i17.Future<_i3.User?>);
  @override
  _i17.Future<List<_i19.UserFavPlaces>?>? getUserFavouritePlaces(
          {String? userId}) =>
      (super.noSuchMethod(
              Invocation.method(#getUserFavouritePlaces, [], {#userId: userId}))
          as _i17.Future<List<_i19.UserFavPlaces>?>?);
  @override
  _i17.Future<_i3.User?> getUserWithName({String? name}) => (super.noSuchMethod(
      Invocation.method(#getUserWithName, [], {#name: name}),
      returnValue: Future<_i3.User?>.value()) as _i17.Future<_i3.User?>);
  @override
  _i17.Future<_i4.UserStatistics> getUserSummaryStatistics({String? uid}) =>
      (super.noSuchMethod(
              Invocation.method(#getUserSummaryStatistics, [], {#uid: uid}),
              returnValue:
                  Future<_i4.UserStatistics>.value(_FakeUserStatistics_2()))
          as _i17.Future<_i4.UserStatistics>);
  @override
  _i17.Stream<_i4.UserStatistics> getUserSummaryStatisticsStream(
          {String? uid}) =>
      (super.noSuchMethod(
          Invocation.method(#getUserSummaryStatisticsStream, [], {#uid: uid}),
          returnValue:
              Stream<_i4.UserStatistics>.empty()) as _i17
          .Stream<_i4.UserStatistics>);
  @override
  _i17.Future<dynamic> updateUserData({_i3.User? user}) =>
      (super.noSuchMethod(Invocation.method(#updateUserData, [], {#user: user}),
          returnValue: Future<dynamic>.value()) as _i17.Future<dynamic>);
  @override
  _i17.Future<dynamic> addSponsorIdToUser({String? uid, String? sponsorId}) =>
      (super.noSuchMethod(
          Invocation.method(
              #addSponsorIdToUser, [], {#uid: uid, #sponsorId: sponsorId}),
          returnValue: Future<dynamic>.value()) as _i17.Future<dynamic>);
  @override
  _i17.Stream<_i3.User> getUserStream({String? uid}) =>
      (super.noSuchMethod(Invocation.method(#getUserStream, [], {#uid: uid}),
          returnValue: Stream<_i3.User>.empty()) as _i17.Stream<_i3.User>);
  @override
  _i17.Stream<List<_i3.User>> getExplorersDataStream({String? uid}) =>
      (super.noSuchMethod(
              Invocation.method(#getExplorersDataStream, [], {#uid: uid}),
              returnValue: Stream<List<_i3.User>>.empty())
          as _i17.Stream<List<_i3.User>>);
  @override
  _i17.Future<List<_i21.PublicUserInfo>> queryExplorers(
          {String? queryString}) =>
      (super.noSuchMethod(
          Invocation.method(#queryExplorers, [], {#queryString: queryString}),
          returnValue: Future<List<_i21.PublicUserInfo>>.value(
              <_i21.PublicUserInfo>[])) as _i17
          .Future<List<_i21.PublicUserInfo>>);
  @override
  _i17.Stream<List<_i22.MoneyTransfer>> getTransferDataStream(
          {_i23.MoneyTransferQueryConfig? config, String? uid}) =>
      (super.noSuchMethod(
              Invocation.method(
                  #getTransferDataStream, [], {#config: config, #uid: uid}),
              returnValue: Stream<List<_i22.MoneyTransfer>>.empty())
          as _i17.Stream<List<_i22.MoneyTransfer>>);
  @override
  _i24.Quest? getQuest({String? questId}) =>
      (super.noSuchMethod(Invocation.method(#getQuest, [], {#questId: questId}))
          as _i24.Quest?);
  @override
  _i17.Future<List<_i24.Quest>> getNearbyQuests({bool? pushDummyQuests}) =>
      (super.noSuchMethod(
              Invocation.method(
                  #getNearbyQuests, [], {#pushDummyQuests: pushDummyQuests}),
              returnValue: Future<List<_i24.Quest>>.value(<_i24.Quest>[]))
          as _i17.Future<List<_i24.Quest>>);
  @override
  _i17.Future<dynamic> pushFinishedQuest({_i10.ActivatedQuest? quest}) => (super
      .noSuchMethod(Invocation.method(#pushFinishedQuest, [], {#quest: quest}),
          returnValue: Future<dynamic>.value()) as _i17.Future<dynamic>);
  @override
  _i17.Future<_i11.AFKMarker?> getMarkerFromQrCodeId({String? qrCodeId}) =>
      (super.noSuchMethod(
          Invocation.method(#getMarkerFromQrCodeId, [], {#qrCodeId: qrCodeId}),
          returnValue:
              Future<_i11.AFKMarker?>.value()) as _i17.Future<_i11.AFKMarker?>);
  @override
  _i17.Future<List<_i24.Quest>> downloadQuestsWithStartMarkerId(
          {String? startMarkerId}) =>
      (super.noSuchMethod(
              Invocation.method(#downloadQuestsWithStartMarkerId, [],
                  {#startMarkerId: startMarkerId}),
              returnValue: Future<List<_i24.Quest>>.value(<_i24.Quest>[]))
          as _i17.Future<List<_i24.Quest>>);
  @override
  _i17.Stream<List<_i10.ActivatedQuest>> getPastQuestsStream({String? uid}) =>
      (super.noSuchMethod(
              Invocation.method(#getPastQuestsStream, [], {#uid: uid}),
              returnValue: Stream<List<_i10.ActivatedQuest>>.empty())
          as _i17.Stream<List<_i10.ActivatedQuest>>);
  @override
  _i17.Future<List<_i25.GiftCardCategory>> getGiftCardsForCategory(
          {String? categoryName}) =>
      (super.noSuchMethod(
              Invocation.method(
                  #getGiftCardsForCategory, [], {#categoryName: categoryName}),
              returnValue: Future<List<_i25.GiftCardCategory>>.value(
                  <_i25.GiftCardCategory>[]))
          as _i17.Future<List<_i25.GiftCardCategory>>);
  @override
  _i17.Future<List<_i25.GiftCardCategory>> getAllGiftCards() =>
      (super.noSuchMethod(Invocation.method(#getAllGiftCards, []),
              returnValue: Future<List<_i25.GiftCardCategory>>.value(
                  <_i25.GiftCardCategory>[]))
          as _i17.Future<List<_i25.GiftCardCategory>>);
  @override
  _i17.Stream<List<_i26.GiftCardPurchase>> getPurchasedGiftCardsStream(
          {String? uid}) =>
      (super.noSuchMethod(
              Invocation.method(#getPurchasedGiftCardsStream, [], {#uid: uid}),
              returnValue: Stream<List<_i26.GiftCardPurchase>>.empty())
          as _i17.Stream<List<_i26.GiftCardPurchase>>);
  @override
  _i17.Future<dynamic> updateGiftCardPurchase(
          {_i26.GiftCardPurchase? giftCardPurchase, String? uid}) =>
      (super.noSuchMethod(
          Invocation.method(#updateGiftCardPurchase, [],
              {#giftCardPurchase: giftCardPurchase, #uid: uid}),
          returnValue: Future<dynamic>.value()) as _i17.Future<dynamic>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [CloudFunctionsApi].
///
/// See the documentation for Mockito's code generation for more information.
class MockCloudFunctionsApi extends _i1.Mock implements _i27.CloudFunctionsApi {
  @override
  _i2.Logger get log =>
      (super.noSuchMethod(Invocation.getter(#log), returnValue: _FakeLogger_0())
          as _i2.Logger);
  @override
  _i17.Future<dynamic> bookkeepFinishedQuest({_i10.ActivatedQuest? quest}) =>
      (super.noSuchMethod(
          Invocation.method(#bookkeepFinishedQuest, [], {#quest: quest}),
          returnValue: Future<dynamic>.value()) as _i17.Future<dynamic>);
  @override
  _i17.Future<dynamic> processTransfer({_i22.MoneyTransfer? moneyTransfer}) =>
      (super.noSuchMethod(
          Invocation.method(
              #processTransfer, [], {#moneyTransfer: moneyTransfer}),
          returnValue: Future<dynamic>.value()) as _i17.Future<dynamic>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [EnvironmentService].
///
/// See the documentation for Mockito's code generation for more information.
class MockEnvironmentService extends _i1.Mock
    implements _i28.EnvironmentService {
  @override
  _i2.Logger get log =>
      (super.noSuchMethod(Invocation.getter(#log), returnValue: _FakeLogger_0())
          as _i2.Logger);
  @override
  _i17.Future<dynamic> initialise() =>
      (super.noSuchMethod(Invocation.method(#initialise, []),
          returnValue: Future<dynamic>.value()) as _i17.Future<dynamic>);
  @override
  String getValue(String? key, {bool? verbose = false}) => (super.noSuchMethod(
      Invocation.method(#getValue, [key], {#verbose: verbose}),
      returnValue: '') as String);
  @override
  String toString() => super.toString();
}

/// A class which mocks [PlacesService].
///
/// See the documentation for Mockito's code generation for more information.
class MockPlacesService extends _i1.Mock implements _i29.PlacesService {
  @override
  _i7.PlacesLocation get currentPosition =>
      (super.noSuchMethod(Invocation.getter(#currentPosition),
          returnValue: _FakePlacesLocation_6()) as _i7.PlacesLocation);
  @override
  void initialize({String? apiKey}) =>
      super.noSuchMethod(Invocation.method(#initialize, [], {#apiKey: apiKey}),
          returnValueForMissingStub: null);
  @override
  _i17.Future<List<_i7.PlacesAutoCompleteResult>> getAutoComplete(
          String? input) =>
      (super.noSuchMethod(Invocation.method(#getAutoComplete, [input]),
              returnValue: Future<List<_i7.PlacesAutoCompleteResult>>.value(
                  <_i7.PlacesAutoCompleteResult>[]))
          as _i17.Future<List<_i7.PlacesAutoCompleteResult>>);
  @override
  _i17.Future<_i7.PlacesDetails> getPlaceDetails(String? placeId) =>
      (super.noSuchMethod(Invocation.method(#getPlaceDetails, [placeId]),
              returnValue:
                  Future<_i7.PlacesDetails>.value(_FakePlacesDetails_7()))
          as _i17.Future<_i7.PlacesDetails>);
  @override
  _i17.Future<dynamic> getPlacesAtCurrentLocation() =>
      (super.noSuchMethod(Invocation.method(#getPlacesAtCurrentLocation, []),
          returnValue: Future<dynamic>.value()) as _i17.Future<dynamic>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [FlavorConfigProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockFlavorConfigProvider extends _i1.Mock
    implements _i30.FlavorConfigProvider {
  @override
  bool get allowDummyMarkerCollection =>
      (super.noSuchMethod(Invocation.getter(#allowDummyMarkerCollection),
          returnValue: false) as bool);
  @override
  set allowDummyMarkerCollection(bool? _allowDummyMarkerCollection) =>
      super.noSuchMethod(
          Invocation.setter(
              #allowDummyMarkerCollection, _allowDummyMarkerCollection),
          returnValueForMissingStub: null);
  @override
  bool get enableGPSVerification =>
      (super.noSuchMethod(Invocation.getter(#enableGPSVerification),
          returnValue: false) as bool);
  @override
  set enableGPSVerification(bool? _enableGPSVerification) => super.noSuchMethod(
      Invocation.setter(#enableGPSVerification, _enableGPSVerification),
      returnValueForMissingStub: null);
  @override
  bool get pushAndUseDummyQuests =>
      (super.noSuchMethod(Invocation.getter(#pushAndUseDummyQuests),
          returnValue: false) as bool);
  @override
  set pushAndUseDummyQuests(bool? _pushAndUseDummyQuests) => super.noSuchMethod(
      Invocation.setter(#pushAndUseDummyQuests, _pushAndUseDummyQuests),
      returnValueForMissingStub: null);
  @override
  _i30.Flavor get flavor => (super.noSuchMethod(Invocation.getter(#flavor),
      returnValue: _i30.Flavor.unknown) as _i30.Flavor);
  @override
  set flavor(_i30.Flavor? _flavor) =>
      super.noSuchMethod(Invocation.setter(#flavor, _flavor),
          returnValueForMissingStub: null);
  @override
  String get appName =>
      (super.noSuchMethod(Invocation.getter(#appName), returnValue: '')
          as String);
  @override
  String get authority =>
      (super.noSuchMethod(Invocation.getter(#authority), returnValue: '')
          as String);
  @override
  String get uripathprepend =>
      (super.noSuchMethod(Invocation.getter(#uripathprepend), returnValue: '')
          as String);
  @override
  void configure(_i30.Flavor? flavorIn) =>
      super.noSuchMethod(Invocation.method(#configure, [flavorIn]),
          returnValueForMissingStub: null);
  @override
  String getTestUserEmail(_i16.UserRole? role) =>
      (super.noSuchMethod(Invocation.method(#getTestUserEmail, [role]),
          returnValue: '') as String);
  @override
  String getTestUserPassword() =>
      (super.noSuchMethod(Invocation.method(#getTestUserPassword, []),
          returnValue: '') as String);
  @override
  String getTestUserId(_i16.UserRole? role) =>
      (super.noSuchMethod(Invocation.method(#getTestUserId, [role]),
          returnValue: '') as String);
  @override
  String toString() => super.toString();
}

/// A class which mocks [LocalStorageService].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocalStorageService extends _i1.Mock
    implements _i31.LocalStorageService {
  @override
  _i2.Logger get log =>
      (super.noSuchMethod(Invocation.getter(#log), returnValue: _FakeLogger_0())
          as _i2.Logger);
  @override
  String get authTokenDataKey =>
      (super.noSuchMethod(Invocation.getter(#authTokenDataKey), returnValue: '')
          as String);
  @override
  set authTokenDataKey(String? _authTokenDataKey) => super.noSuchMethod(
      Invocation.setter(#authTokenDataKey, _authTokenDataKey),
      returnValueForMissingStub: null);
  @override
  _i17.Future<dynamic> saveToDisk({String? key, dynamic value}) =>
      (super.noSuchMethod(
          Invocation.method(#saveToDisk, [], {#key: key, #value: value}),
          returnValue: Future<dynamic>.value()) as _i17.Future<dynamic>);
  @override
  _i17.Future<dynamic> deleteFromDisk({String? key}) =>
      (super.noSuchMethod(Invocation.method(#deleteFromDisk, [], {#key: key}),
          returnValue: Future<dynamic>.value()) as _i17.Future<dynamic>);
  @override
  _i17.Future<dynamic> getFromDisk({String? key}) =>
      (super.noSuchMethod(Invocation.method(#getFromDisk, [], {#key: key}),
          returnValue: Future<dynamic>.value()) as _i17.Future<dynamic>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [FlutterSecureStorage].
///
/// See the documentation for Mockito's code generation for more information.
class MockFlutterSecureStorage extends _i1.Mock
    implements _i32.FlutterSecureStorage {
  @override
  _i17.Future<void> write(
          {String? key,
          String? value,
          _i32.IOSOptions? iOptions = _i32.IOSOptions.defaultOptions,
          _i32.AndroidOptions? aOptions,
          _i32.LinuxOptions? lOptions}) =>
      (super.noSuchMethod(
              Invocation.method(#write, [], {
                #key: key,
                #value: value,
                #iOptions: iOptions,
                #aOptions: aOptions,
                #lOptions: lOptions
              }),
              returnValue: Future<void>.value(),
              returnValueForMissingStub: Future<void>.value())
          as _i17.Future<void>);
  @override
  _i17.Future<String?> read(
          {String? key,
          _i32.IOSOptions? iOptions = _i32.IOSOptions.defaultOptions,
          _i32.AndroidOptions? aOptions,
          _i32.LinuxOptions? lOptions}) =>
      (super.noSuchMethod(
          Invocation.method(#read, [], {
            #key: key,
            #iOptions: iOptions,
            #aOptions: aOptions,
            #lOptions: lOptions
          }),
          returnValue: Future<String?>.value()) as _i17.Future<String?>);
  @override
  _i17.Future<bool> containsKey(
          {String? key,
          _i32.IOSOptions? iOptions = _i32.IOSOptions.defaultOptions,
          _i32.AndroidOptions? aOptions,
          _i32.LinuxOptions? lOptions}) =>
      (super.noSuchMethod(
          Invocation.method(#containsKey, [], {
            #key: key,
            #iOptions: iOptions,
            #aOptions: aOptions,
            #lOptions: lOptions
          }),
          returnValue: Future<bool>.value(false)) as _i17.Future<bool>);
  @override
  _i17.Future<void> delete(
          {String? key,
          _i32.IOSOptions? iOptions = _i32.IOSOptions.defaultOptions,
          _i32.AndroidOptions? aOptions,
          _i32.LinuxOptions? lOptions}) =>
      (super.noSuchMethod(
              Invocation.method(#delete, [], {
                #key: key,
                #iOptions: iOptions,
                #aOptions: aOptions,
                #lOptions: lOptions
              }),
              returnValue: Future<void>.value(),
              returnValueForMissingStub: Future<void>.value())
          as _i17.Future<void>);
  @override
  _i17.Future<Map<String, String>> readAll(
          {_i32.IOSOptions? iOptions = _i32.IOSOptions.defaultOptions,
          _i32.AndroidOptions? aOptions,
          _i32.LinuxOptions? lOptions}) =>
      (super.noSuchMethod(
              Invocation.method(#readAll, [], {
                #iOptions: iOptions,
                #aOptions: aOptions,
                #lOptions: lOptions
              }),
              returnValue:
                  Future<Map<String, String>>.value(<String, String>{}))
          as _i17.Future<Map<String, String>>);
  @override
  _i17.Future<void> deleteAll(
          {_i32.IOSOptions? iOptions = _i32.IOSOptions.defaultOptions,
          _i32.AndroidOptions? aOptions,
          _i32.LinuxOptions? lOptions}) =>
      (super.noSuchMethod(
              Invocation.method(#deleteAll, [], {
                #iOptions: iOptions,
                #aOptions: aOptions,
                #lOptions: lOptions
              }),
              returnValue: Future<void>.value(),
              returnValueForMissingStub: Future<void>.value())
          as _i17.Future<void>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [LayoutService].
///
/// See the documentation for Mockito's code generation for more information.
class MockLayoutService extends _i1.Mock implements _i33.LayoutService {
  @override
  _i8.BehaviorSubject<bool> get showBottomNavBarSubject =>
      (super.noSuchMethod(Invocation.getter(#showBottomNavBarSubject),
              returnValue: _FakeBehaviorSubject_8<bool>())
          as _i8.BehaviorSubject<bool>);
  @override
  set showBottomNavBarSubject(
          _i8.BehaviorSubject<bool>? _showBottomNavBarSubject) =>
      super.noSuchMethod(
          Invocation.setter(#showBottomNavBarSubject, _showBottomNavBarSubject),
          returnValueForMissingStub: null);
  @override
  bool get showBottomNavBar =>
      (super.noSuchMethod(Invocation.getter(#showBottomNavBar),
          returnValue: false) as bool);
  @override
  void setShowBottomNavBar(bool? show) =>
      super.noSuchMethod(Invocation.method(#setShowBottomNavBar, [show]),
          returnValueForMissingStub: null);
  @override
  String toString() => super.toString();
}

/// A class which mocks [TransfersHistoryService].
///
/// See the documentation for Mockito's code generation for more information.
class MockTransfersHistoryService extends _i1.Mock
    implements _i34.TransfersHistoryService {
  @override
  _i2.Logger get log =>
      (super.noSuchMethod(Invocation.getter(#log), returnValue: _FakeLogger_0())
          as _i2.Logger);
  @override
  Map<_i23.MoneyTransferQueryConfig, List<_i22.MoneyTransfer>>
      get latestTransfers => (super
              .noSuchMethod(Invocation.getter(#latestTransfers), returnValue: <
                  _i23.MoneyTransferQueryConfig, List<_i22.MoneyTransfer>>{})
          as Map<_i23.MoneyTransferQueryConfig, List<_i22.MoneyTransfer>>);
  @override
  set latestTransfers(
          Map<_i23.MoneyTransferQueryConfig, List<_i22.MoneyTransfer>>?
              _latestTransfers) =>
      super.noSuchMethod(Invocation.setter(#latestTransfers, _latestTransfers),
          returnValueForMissingStub: null);
  @override
  _i3.User get currentUser =>
      (super.noSuchMethod(Invocation.getter(#currentUser),
          returnValue: _FakeUser_1()) as _i3.User);
  @override
  _i17.Stream<List<_i22.MoneyTransfer>> getTransferDataStream(
          {_i23.MoneyTransferQueryConfig? config}) =>
      (super.noSuchMethod(
              Invocation.method(#getTransferDataStream, [], {#config: config}),
              returnValue: Stream<List<_i22.MoneyTransfer>>.empty())
          as _i17.Stream<List<_i22.MoneyTransfer>>);
  @override
  List<_i22.MoneyTransfer> getTransfers(
          {_i23.MoneyTransferQueryConfig? config}) =>
      (super.noSuchMethod(
          Invocation.method(#getTransfers, [], {#config: config}),
          returnValue: <_i22.MoneyTransfer>[]) as List<_i22.MoneyTransfer>);
  @override
  void addTransferDataListener(
          {_i23.MoneyTransferQueryConfig? config,
          _i17.Completer<void>? completer,
          void Function()? callback}) =>
      super.noSuchMethod(
          Invocation.method(#addTransferDataListener, [],
              {#config: config, #completer: completer, #callback: callback}),
          returnValueForMissingStub: null);
  @override
  void pauseTransferDataListener({_i23.MoneyTransferQueryConfig? config}) =>
      super.noSuchMethod(
          Invocation.method(#pauseTransferDataListener, [], {#config: config}),
          returnValueForMissingStub: null);
  @override
  void cancelTransferDataListener({_i23.MoneyTransferQueryConfig? config}) =>
      super.noSuchMethod(
          Invocation.method(#cancelTransferDataListener, [], {#config: config}),
          returnValueForMissingStub: null);
  @override
  List<_i22.MoneyTransfer> getMoneyTransfersWithUniqueSender(
          List<_i22.MoneyTransfer>? transfer) =>
      (super.noSuchMethod(
          Invocation.method(#getMoneyTransfersWithUniqueSender, [transfer]),
          returnValue: <_i22.MoneyTransfer>[]) as List<_i22.MoneyTransfer>);
  @override
  void clearData() => super.noSuchMethod(Invocation.method(#clearData, []),
      returnValueForMissingStub: null);
  @override
  String toString() => super.toString();
}

/// A class which mocks [GeolocationService].
///
/// See the documentation for Mockito's code generation for more information.
class MockGeolocationService extends _i1.Mock
    implements _i35.GeolocationService {
  @override
  _i2.Logger get log =>
      (super.noSuchMethod(Invocation.getter(#log), returnValue: _FakeLogger_0())
          as _i2.Logger);
  @override
  _i17.Future<dynamic> getAndSetCurrentLocation() =>
      (super.noSuchMethod(Invocation.method(#getAndSetCurrentLocation, []),
          returnValue: Future<dynamic>.value()) as _i17.Future<dynamic>);
  @override
  _i17.Future<dynamic> setUserPosition({dynamic position}) =>
      (super.noSuchMethod(
          Invocation.method(#setUserPosition, [], {#position: position}),
          returnValue: Future<dynamic>.value()) as _i17.Future<dynamic>);
  @override
  _i17.Future<bool> checkGeolocationAvailable() =>
      (super.noSuchMethod(Invocation.method(#checkGeolocationAvailable, []),
          returnValue: Future<bool>.value(false)) as _i17.Future<bool>);
  @override
  _i17.Future<bool> handlePermission() =>
      (super.noSuchMethod(Invocation.method(#handlePermission, []),
          returnValue: Future<bool>.value(false)) as _i17.Future<bool>);
  @override
  _i17.Future<bool> isUserCloseby({double? lat, double? lon}) =>
      (super.noSuchMethod(
          Invocation.method(#isUserCloseby, [], {#lat: lat, #lon: lon}),
          returnValue: Future<bool>.value(false)) as _i17.Future<bool>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [QuestService].
///
/// See the documentation for Mockito's code generation for more information.
class MockQuestService extends _i1.Mock implements _i36.QuestService {
  @override
  _i8.BehaviorSubject<_i10.ActivatedQuest?> get activatedQuestSubject =>
      (super.noSuchMethod(Invocation.getter(#activatedQuestSubject),
              returnValue: _FakeBehaviorSubject_8<_i10.ActivatedQuest?>())
          as _i8.BehaviorSubject<_i10.ActivatedQuest?>);
  @override
  set activatedQuestSubject(
          _i8.BehaviorSubject<_i10.ActivatedQuest?>? _activatedQuestSubject) =>
      super.noSuchMethod(
          Invocation.setter(#activatedQuestSubject, _activatedQuestSubject),
          returnValueForMissingStub: null);
  @override
  List<_i10.ActivatedQuest> get activatedQuestsHistory =>
      (super.noSuchMethod(Invocation.getter(#activatedQuestsHistory),
          returnValue: <_i10.ActivatedQuest>[]) as List<_i10.ActivatedQuest>);
  @override
  set activatedQuestsHistory(
          List<_i10.ActivatedQuest>? _activatedQuestsHistory) =>
      super.noSuchMethod(
          Invocation.setter(#activatedQuestsHistory, _activatedQuestsHistory),
          returnValueForMissingStub: null);
  @override
  List<_i24.Quest> get nearbyQuests =>
      (super.noSuchMethod(Invocation.getter(#nearbyQuests),
          returnValue: <_i24.Quest>[]) as List<_i24.Quest>);
  @override
  set nearbyQuests(List<_i24.Quest>? _nearbyQuests) =>
      super.noSuchMethod(Invocation.setter(#nearbyQuests, _nearbyQuests),
          returnValueForMissingStub: null);
  @override
  _i2.Logger get log =>
      (super.noSuchMethod(Invocation.getter(#log), returnValue: _FakeLogger_0())
          as _i2.Logger);
  @override
  set previouslyFinishedQuest(_i10.ActivatedQuest? _previouslyFinishedQuest) =>
      super.noSuchMethod(
          Invocation.setter(#previouslyFinishedQuest, _previouslyFinishedQuest),
          returnValueForMissingStub: null);
  @override
  bool get hasActiveQuest => (super
          .noSuchMethod(Invocation.getter(#hasActiveQuest), returnValue: false)
      as bool);
  @override
  int get getNumberMarkersCollected =>
      (super.noSuchMethod(Invocation.getter(#getNumberMarkersCollected),
          returnValue: 0) as int);
  @override
  bool get isAllMarkersCollected =>
      (super.noSuchMethod(Invocation.getter(#isAllMarkersCollected),
          returnValue: false) as bool);
  @override
  void setStartedQuest(_i24.Quest? quest) =>
      super.noSuchMethod(Invocation.method(#setStartedQuest, [quest]),
          returnValueForMissingStub: null);
  @override
  _i17.Future<dynamic> startQuest({_i24.Quest? quest, List<String>? uids}) =>
      (super.noSuchMethod(
          Invocation.method(#startQuest, [], {#quest: quest, #uids: uids}),
          returnValue: Future<dynamic>.value()) as _i17.Future<dynamic>);
  @override
  _i17.Future<dynamic> evaluateAndFinishQuest() =>
      (super.noSuchMethod(Invocation.method(#evaluateAndFinishQuest, []),
          returnValue: Future<dynamic>.value()) as _i17.Future<dynamic>);
  @override
  _i17.Future<dynamic> continueIncompleteQuest() =>
      (super.noSuchMethod(Invocation.method(#continueIncompleteQuest, []),
          returnValue: Future<dynamic>.value()) as _i17.Future<dynamic>);
  @override
  _i17.Future<dynamic> cancelIncompleteQuest() =>
      (super.noSuchMethod(Invocation.method(#cancelIncompleteQuest, []),
          returnValue: Future<dynamic>.value()) as _i17.Future<dynamic>);
  @override
  void evaluateQuestAndSetStatus() =>
      super.noSuchMethod(Invocation.method(#evaluateQuestAndSetStatus, []),
          returnValueForMissingStub: null);
  @override
  _i17.Future<dynamic> trackData(int? seconds) =>
      (super.noSuchMethod(Invocation.method(#trackData, [seconds]),
          returnValue: Future<dynamic>.value()) as _i17.Future<dynamic>);
  @override
  void updateCollectedMarkers({_i11.AFKMarker? marker}) => super.noSuchMethod(
      Invocation.method(#updateCollectedMarkers, [], {#marker: marker}),
      returnValueForMissingStub: null);
  @override
  bool isMarkerCollected({_i11.AFKMarker? marker}) => (super.noSuchMethod(
      Invocation.method(#isMarkerCollected, [], {#marker: marker}),
      returnValue: false) as bool);
  @override
  _i17.Future<_i9.QuestQRCodeScanResult> handleQrCodeScanEvent(
          {_i11.AFKMarker? marker}) =>
      (super.noSuchMethod(
              Invocation.method(#handleQrCodeScanEvent, [], {#marker: marker}),
              returnValue: Future<_i9.QuestQRCodeScanResult>.value(
                  _FakeQuestQRCodeScanResult_9()))
          as _i17.Future<_i9.QuestQRCodeScanResult>);
  @override
  _i17.Future<_i11.AFKMarker?> getMarkerFromQrCodeId({String? qrCodeId}) =>
      (super.noSuchMethod(
          Invocation.method(#getMarkerFromQrCodeId, [], {#qrCodeId: qrCodeId}),
          returnValue:
              Future<_i11.AFKMarker?>.value()) as _i17.Future<_i11.AFKMarker?>);
  @override
  _i17.Future<void>? setupPastQuestsListener(
          {_i17.Completer<void>? completer,
          String? uid,
          void Function()? callback}) =>
      (super.noSuchMethod(
              Invocation.method(#setupPastQuestsListener, [],
                  {#completer: completer, #uid: uid, #callback: callback}),
              returnValueForMissingStub: Future<void>.value())
          as _i17.Future<void>?);
  @override
  _i17.Future<dynamic> loadNearbyQuests() =>
      (super.noSuchMethod(Invocation.method(#loadNearbyQuests, []),
          returnValue: Future<dynamic>.value()) as _i17.Future<dynamic>);
  @override
  void pushActivatedQuest(_i10.ActivatedQuest? quest) =>
      super.noSuchMethod(Invocation.method(#pushActivatedQuest, [quest]),
          returnValueForMissingStub: null);
  @override
  void removeActivatedQuest() =>
      super.noSuchMethod(Invocation.method(#removeActivatedQuest, []),
          returnValueForMissingStub: null);
  @override
  bool isMarkerInQuest({_i11.AFKMarker? marker}) => (super.noSuchMethod(
      Invocation.method(#isMarkerInQuest, [], {#marker: marker}),
      returnValue: false) as bool);
  @override
  _i17.Future<dynamic> getQuest({String? questId}) =>
      (super.noSuchMethod(Invocation.method(#getQuest, [], {#questId: questId}),
          returnValue: Future<dynamic>.value()) as _i17.Future<dynamic>);
  @override
  void updateTime(int? seconds) =>
      super.noSuchMethod(Invocation.method(#updateTime, [seconds]),
          returnValueForMissingStub: null);
  @override
  _i10.ActivatedQuest updateTimeOnQuest(
          _i10.ActivatedQuest? activatedQuest, int? seconds) =>
      (super.noSuchMethod(
          Invocation.method(#updateTimeOnQuest, [activatedQuest, seconds]),
          returnValue: _FakeActivatedQuest_10()) as _i10.ActivatedQuest);
  @override
  void disposeActivatedQuest() =>
      super.noSuchMethod(Invocation.method(#disposeActivatedQuest, []),
          returnValueForMissingStub: null);
  @override
  void clearData() => super.noSuchMethod(Invocation.method(#clearData, []),
      returnValueForMissingStub: null);
  @override
  String toString() => super.toString();
}

/// A class which mocks [StopWatchService].
///
/// See the documentation for Mockito's code generation for more information.
class MockStopWatchService extends _i1.Mock implements _i37.StopWatchService {
  @override
  _i2.Logger get log =>
      (super.noSuchMethod(Invocation.getter(#log), returnValue: _FakeLogger_0())
          as _i2.Logger);
  @override
  bool get flag =>
      (super.noSuchMethod(Invocation.getter(#flag), returnValue: false)
          as bool);
  @override
  set flag(bool? _flag) => super.noSuchMethod(Invocation.setter(#flag, _flag),
      returnValueForMissingStub: null);
  @override
  set timerStream(_i17.Stream<int>? _timerStream) =>
      super.noSuchMethod(Invocation.setter(#timerStream, _timerStream),
          returnValueForMissingStub: null);
  @override
  String get getHours =>
      (super.noSuchMethod(Invocation.getter(#getHours), returnValue: '')
          as String);
  @override
  String get getMinutes =>
      (super.noSuchMethod(Invocation.getter(#getMinutes), returnValue: '')
          as String);
  @override
  String get getSeconds =>
      (super.noSuchMethod(Invocation.getter(#getSeconds), returnValue: '')
          as String);
  @override
  void startTimer() => super.noSuchMethod(Invocation.method(#startTimer, []),
      returnValueForMissingStub: null);
  @override
  void stopTimer() => super.noSuchMethod(Invocation.method(#stopTimer, []),
      returnValueForMissingStub: null);
  @override
  void resetTimer() => super.noSuchMethod(Invocation.method(#resetTimer, []),
      returnValueForMissingStub: null);
  @override
  int getSecondTime() =>
      (super.noSuchMethod(Invocation.method(#getSecondTime, []), returnValue: 0)
          as int);
  @override
  void listenToSecondTime({_i17.Future<dynamic> Function(int)? callback}) =>
      super.noSuchMethod(
          Invocation.method(#listenToSecondTime, [], {#callback: callback}),
          returnValueForMissingStub: null);
  @override
  void cancelListener() =>
      super.noSuchMethod(Invocation.method(#cancelListener, []),
          returnValueForMissingStub: null);
  @override
  void pauseListener() =>
      super.noSuchMethod(Invocation.method(#pauseListener, []),
          returnValueForMissingStub: null);
  @override
  void resumeListener() =>
      super.noSuchMethod(Invocation.method(#resumeListener, []),
          returnValueForMissingStub: null);
  @override
  _i17.Stream<int> stopWatchStream() =>
      (super.noSuchMethod(Invocation.method(#stopWatchStream, []),
          returnValue: Stream<int>.empty()) as _i17.Stream<int>);
  @override
  void setTimerStreamSubscription(
          {_i17.StreamSubscription<int>? timerSubscription}) =>
      super.noSuchMethod(
          Invocation.method(#setTimerStreamSubscription, [],
              {#timerSubscription: timerSubscription}),
          returnValueForMissingStub: null);
  @override
  String secondsToHourMinuteSecondTime(int? value) => (super.noSuchMethod(
      Invocation.method(#secondsToHourMinuteSecondTime, [value]),
      returnValue: '') as String);
  @override
  String toString() => super.toString();
}

/// A class which mocks [MarkerService].
///
/// See the documentation for Mockito's code generation for more information.
class MockMarkerService extends _i1.Mock implements _i38.MarkerService {
  @override
  _i2.Logger get log =>
      (super.noSuchMethod(Invocation.getter(#log), returnValue: _FakeLogger_0())
          as _i2.Logger);
  @override
  List<_i11.AFKMarker> get getSetMarkers =>
      (super.noSuchMethod(Invocation.getter(#getSetMarkers),
          returnValue: <_i11.AFKMarker>[]) as List<_i11.AFKMarker>);
  @override
  _i17.Future<bool> isUserCloseby({_i11.AFKMarker? marker}) => (super
      .noSuchMethod(Invocation.method(#isUserCloseby, [], {#marker: marker}),
          returnValue: Future<bool>.value(false)) as _i17.Future<bool>);
  @override
  _i17.Future<void> addMarkers({_i11.AFKMarker? markers}) => (super
          .noSuchMethod(Invocation.method(#addMarkers, [], {#markers: markers}),
              returnValue: Future<void>.value(),
              returnValueForMissingStub: Future<void>.value())
      as _i17.Future<void>);
  @override
  _i17.Future<List<_i11.AFKMarker>?> getQuestMarkers() =>
      (super.noSuchMethod(Invocation.method(#getQuestMarkers, []),
              returnValue: Future<List<_i11.AFKMarker>?>.value())
          as _i17.Future<List<_i11.AFKMarker>?>);
  @override
  _i17.Future<void> setQuestMarkers({List<_i11.AFKMarker>? markers}) =>
      (super.noSuchMethod(
              Invocation.method(#setQuestMarkers, [], {#markers: markers}),
              returnValue: Future<void>.value(),
              returnValueForMissingStub: Future<void>.value())
          as _i17.Future<void>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [QRCodeService].
///
/// See the documentation for Mockito's code generation for more information.
class MockQRCodeService extends _i1.Mock implements _i39.QRCodeService {
  @override
  _i2.Logger get log =>
      (super.noSuchMethod(Invocation.getter(#log), returnValue: _FakeLogger_0())
          as _i2.Logger);
  @override
  _i11.AFKMarker getMarkerFromQrCodeString({String? qrCodeString}) =>
      (super.noSuchMethod(
          Invocation.method(
              #getMarkerFromQrCodeString, [], {#qrCodeString: qrCodeString}),
          returnValue: _FakeAFKMarker_11()) as _i11.AFKMarker);
  @override
  String getQrCodeStringFromMarker({_i11.AFKMarker? marker}) =>
      (super.noSuchMethod(
          Invocation.method(#getQrCodeStringFromMarker, [], {#marker: marker}),
          returnValue: '') as String);
  @override
  String toString() => super.toString();
}

/// A class which mocks [GiftCardService].
///
/// See the documentation for Mockito's code generation for more information.
class MockGiftCardService extends _i1.Mock implements _i40.GiftCardService {
  @override
  _i2.Logger get log =>
      (super.noSuchMethod(Invocation.getter(#log), returnValue: _FakeLogger_0())
          as _i2.Logger);
  @override
  Map<String, List<_i25.GiftCardCategory>> get giftCardCategories =>
      (super.noSuchMethod(Invocation.getter(#giftCardCategories),
              returnValue: <String, List<_i25.GiftCardCategory>>{})
          as Map<String, List<_i25.GiftCardCategory>>);
  @override
  set giftCardCategories(
          Map<String, List<_i25.GiftCardCategory>>? _giftCardCategories) =>
      super.noSuchMethod(
          Invocation.setter(#giftCardCategories, _giftCardCategories),
          returnValueForMissingStub: null);
  @override
  List<_i26.GiftCardPurchase> get purchasedGiftCards => (super.noSuchMethod(
      Invocation.getter(#purchasedGiftCards),
      returnValue: <_i26.GiftCardPurchase>[]) as List<_i26.GiftCardPurchase>);
  @override
  set purchasedGiftCards(List<_i26.GiftCardPurchase>? _purchasedGiftCards) =>
      super.noSuchMethod(
          Invocation.setter(#purchasedGiftCards, _purchasedGiftCards),
          returnValueForMissingStub: null);
  @override
  List<_i25.GiftCardCategory> getGiftCards({String? categoryName}) => (super
      .noSuchMethod(
          Invocation.method(#getGiftCards, [], {#categoryName: categoryName}),
          returnValue: <_i25.GiftCardCategory>[]) as List<
      _i25.GiftCardCategory>);
  @override
  _i17.Future<dynamic> fetchGiftCards({String? categoryName}) =>
      (super.noSuchMethod(
          Invocation.method(#fetchGiftCards, [], {#categoryName: categoryName}),
          returnValue: Future<dynamic>.value()) as _i17.Future<dynamic>);
  @override
  _i17.Future<dynamic> fetchAllGiftCards() =>
      (super.noSuchMethod(Invocation.method(#fetchAllGiftCards, []),
          returnValue: Future<dynamic>.value()) as _i17.Future<dynamic>);
  @override
  _i17.Future<void>? setupPurchasedGiftCardsListener(
          {_i17.Completer<void>? completer,
          String? uid,
          void Function()? callback}) =>
      (super.noSuchMethod(
              Invocation.method(#setupPurchasedGiftCardsListener, [],
                  {#completer: completer, #uid: uid, #callback: callback}),
              returnValueForMissingStub: Future<void>.value())
          as _i17.Future<void>?);
  @override
  List<String> getUniqueCategoryNames(
          {List<_i25.GiftCardCategory>? listOfGiftCardCategories}) =>
      (super.noSuchMethod(
          Invocation.method(#getUniqueCategoryNames, [],
              {#listOfGiftCardCategories: listOfGiftCardCategories}),
          returnValue: <String>[]) as List<String>);
  @override
  _i17.Future<dynamic> switchRedeemStatus(
          {_i26.GiftCardPurchase? giftCardPurchase, String? uid}) =>
      (super.noSuchMethod(
          Invocation.method(#switchRedeemStatus, [],
              {#giftCardPurchase: giftCardPurchase, #uid: uid}),
          returnValue: Future<dynamic>.value()) as _i17.Future<dynamic>);
  @override
  _i17.Future<dynamic> purchaseGiftCard(
          {_i26.GiftCardPurchase? giftCardPurchase}) =>
      (super.noSuchMethod(
          Invocation.method(
              #purchaseGiftCard, [], {#giftCardPurchase: giftCardPurchase}),
          returnValue: Future<dynamic>.value()) as _i17.Future<dynamic>);
  @override
  void clearData() => super.noSuchMethod(Invocation.method(#clearData, []),
      returnValueForMissingStub: null);
  @override
  void cancelPurchasedGiftCardSubscription() => super.noSuchMethod(
      Invocation.method(#cancelPurchasedGiftCardSubscription, []),
      returnValueForMissingStub: null);
  @override
  String toString() => super.toString();
}

/// A class which mocks [NavigationService].
///
/// See the documentation for Mockito's code generation for more information.
class MockNavigationService extends _i1.Mock implements _i41.NavigationService {
  @override
  String get previousRoute =>
      (super.noSuchMethod(Invocation.getter(#previousRoute), returnValue: '')
          as String);
  @override
  String get currentRoute =>
      (super.noSuchMethod(Invocation.getter(#currentRoute), returnValue: '')
          as String);
  @override
  _i42.GlobalKey<_i42.NavigatorState>? nestedNavigationKey(int? index) =>
      (super.noSuchMethod(Invocation.method(#nestedNavigationKey, [index]))
          as _i42.GlobalKey<_i42.NavigatorState>?);
  @override
  void config(
          {bool? enableLog,
          bool? defaultPopGesture,
          bool? defaultOpaqueRoute,
          Duration? defaultDurationTransition,
          bool? defaultGlobalState,
          String? defaultTransition}) =>
      super.noSuchMethod(
          Invocation.method(#config, [], {
            #enableLog: enableLog,
            #defaultPopGesture: defaultPopGesture,
            #defaultOpaqueRoute: defaultOpaqueRoute,
            #defaultDurationTransition: defaultDurationTransition,
            #defaultGlobalState: defaultGlobalState,
            #defaultTransition: defaultTransition
          }),
          returnValueForMissingStub: null);
  @override
  _i17.Future<T?>? navigateWithTransition<T>(_i42.Widget? page,
          {bool? opaque,
          String? transition = r'',
          Duration? duration,
          bool? popGesture,
          int? id,
          _i42.Curve? curve,
          _i43.Bindings? binding,
          bool? fullscreenDialog = false,
          bool? preventDuplicates = true,
          _i43.Transition? transitionClass}) =>
      (super.noSuchMethod(Invocation.method(#navigateWithTransition, [
        page
      ], {
        #opaque: opaque,
        #transition: transition,
        #duration: duration,
        #popGesture: popGesture,
        #id: id,
        #curve: curve,
        #binding: binding,
        #fullscreenDialog: fullscreenDialog,
        #preventDuplicates: preventDuplicates,
        #transitionClass: transitionClass
      })) as _i17.Future<T?>?);
  @override
  _i17.Future<T?>? replaceWithTransition<T>(_i42.Widget? page,
          {bool? opaque,
          String? transition = r'',
          Duration? duration,
          bool? popGesture,
          int? id,
          _i42.Curve? curve,
          _i43.Bindings? binding,
          bool? fullscreenDialog = false,
          bool? preventDuplicates = true,
          _i43.Transition? transitionClass}) =>
      (super.noSuchMethod(Invocation.method(#replaceWithTransition, [
        page
      ], {
        #opaque: opaque,
        #transition: transition,
        #duration: duration,
        #popGesture: popGesture,
        #id: id,
        #curve: curve,
        #binding: binding,
        #fullscreenDialog: fullscreenDialog,
        #preventDuplicates: preventDuplicates,
        #transitionClass: transitionClass
      })) as _i17.Future<T?>?);
  @override
  bool back<T>({T? result, int? id}) => (super.noSuchMethod(
      Invocation.method(#back, [], {#result: result, #id: id}),
      returnValue: false) as bool);
  @override
  void popUntil(_i42.RoutePredicate? predicate) =>
      super.noSuchMethod(Invocation.method(#popUntil, [predicate]),
          returnValueForMissingStub: null);
  @override
  void popRepeated(int? popTimes) =>
      super.noSuchMethod(Invocation.method(#popRepeated, [popTimes]),
          returnValueForMissingStub: null);
  @override
  _i17.Future<T?>? navigateTo<T>(String? routeName,
          {dynamic arguments,
          int? id,
          bool? preventDuplicates = true,
          Map<String, String>? parameters}) =>
      (super.noSuchMethod(Invocation.method(#navigateTo, [
        routeName
      ], {
        #arguments: arguments,
        #id: id,
        #preventDuplicates: preventDuplicates,
        #parameters: parameters
      })) as _i17.Future<T?>?);
  @override
  _i17.Future<T?>? navigateToView<T>(_i42.Widget? view,
          {dynamic arguments,
          int? id,
          bool? opaque,
          _i42.Curve? curve,
          _i43.Bindings? binding,
          Duration? duration,
          bool? fullscreenDialog = false,
          bool? popGesture,
          bool? preventDuplicates = true,
          _i43.Transition? transition}) =>
      (super.noSuchMethod(Invocation.method(#navigateToView, [
        view
      ], {
        #arguments: arguments,
        #id: id,
        #opaque: opaque,
        #curve: curve,
        #binding: binding,
        #duration: duration,
        #fullscreenDialog: fullscreenDialog,
        #popGesture: popGesture,
        #preventDuplicates: preventDuplicates,
        #transition: transition
      })) as _i17.Future<T?>?);
  @override
  _i17.Future<T?>? replaceWith<T>(String? routeName,
          {dynamic arguments,
          int? id,
          bool? preventDuplicates = true,
          Map<String, String>? parameters}) =>
      (super.noSuchMethod(Invocation.method(#replaceWith, [
        routeName
      ], {
        #arguments: arguments,
        #id: id,
        #preventDuplicates: preventDuplicates,
        #parameters: parameters
      })) as _i17.Future<T?>?);
  @override
  _i17.Future<T?>? clearStackAndShow<T>(String? routeName,
          {dynamic arguments, int? id, Map<String, String>? parameters}) =>
      (super.noSuchMethod(Invocation.method(#clearStackAndShow, [
        routeName
      ], {
        #arguments: arguments,
        #id: id,
        #parameters: parameters
      })) as _i17.Future<T?>?);
  @override
  _i17.Future<T?>? clearTillFirstAndShow<T>(String? routeName,
          {dynamic arguments,
          int? id,
          bool? preventDuplicates = true,
          Map<String, String>? parameters}) =>
      (super.noSuchMethod(Invocation.method(#clearTillFirstAndShow, [
        routeName
      ], {
        #arguments: arguments,
        #id: id,
        #preventDuplicates: preventDuplicates,
        #parameters: parameters
      })) as _i17.Future<T?>?);
  @override
  _i17.Future<T?>? clearTillFirstAndShowView<T>(_i42.Widget? view,
          {dynamic arguments, int? id}) =>
      (super.noSuchMethod(Invocation.method(#clearTillFirstAndShowView, [view],
          {#arguments: arguments, #id: id})) as _i17.Future<T?>?);
  @override
  _i17.Future<T?>? pushNamedAndRemoveUntil<T>(String? routeName,
          {_i42.RoutePredicate? predicate, dynamic arguments, int? id}) =>
      (super.noSuchMethod(Invocation.method(#pushNamedAndRemoveUntil, [
        routeName
      ], {
        #predicate: predicate,
        #arguments: arguments,
        #id: id
      })) as _i17.Future<T?>?);
  @override
  String toString() => super.toString();
}

/// A class which mocks [SnackbarService].
///
/// See the documentation for Mockito's code generation for more information.
class MockSnackbarService extends _i1.Mock implements _i41.SnackbarService {
  @override
  void registerSnackbarConfig(_i41.SnackbarConfig? config) =>
      super.noSuchMethod(Invocation.method(#registerSnackbarConfig, [config]),
          returnValueForMissingStub: null);
  @override
  void registerCustomSnackbarconfig(
          {dynamic customData, _i41.SnackbarConfig? config}) =>
      super.noSuchMethod(
          Invocation.method(#registerCustomSnackbarconfig, [],
              {#customData: customData, #config: config}),
          returnValueForMissingStub: null);
  @override
  void registerCustomMainButtonBuilder(
          {dynamic variant,
          _i42.Widget Function(String?, Function?)? builder}) =>
      super.noSuchMethod(
          Invocation.method(#registerCustomMainButtonBuilder, [],
              {#variant: variant, #builder: builder}),
          returnValueForMissingStub: null);
  @override
  void registerCustomSnackbarConfig(
          {dynamic variant,
          _i41.SnackbarConfig? config,
          _i41.SnackbarConfig Function()? configBuilder}) =>
      super.noSuchMethod(
          Invocation.method(#registerCustomSnackbarConfig, [], {
            #variant: variant,
            #config: config,
            #configBuilder: configBuilder
          }),
          returnValueForMissingStub: null);
  @override
  void showSnackbar(
          {String? title = r'',
          String? message,
          dynamic Function(dynamic)? onTap,
          Duration? duration = const Duration(seconds: 3),
          String? mainButtonTitle,
          void Function()? onMainButtonTapped}) =>
      super.noSuchMethod(
          Invocation.method(#showSnackbar, [], {
            #title: title,
            #message: message,
            #onTap: onTap,
            #duration: duration,
            #mainButtonTitle: mainButtonTitle,
            #onMainButtonTapped: onMainButtonTapped
          }),
          returnValueForMissingStub: null);
  @override
  _i17.Future<dynamic>? showCustomSnackBar(
          {String? message,
          dynamic customData,
          dynamic variant,
          String? title,
          String? mainButtonTitle,
          void Function()? onMainButtonTapped,
          Function? onTap,
          Duration? duration = const Duration(seconds: 1)}) =>
      (super.noSuchMethod(Invocation.method(#showCustomSnackBar, [], {
        #message: message,
        #customData: customData,
        #variant: variant,
        #title: title,
        #mainButtonTitle: mainButtonTitle,
        #onMainButtonTapped: onMainButtonTapped,
        #onTap: onTap,
        #duration: duration
      })) as _i17.Future<dynamic>?);
  @override
  String toString() => super.toString();
}

/// A class which mocks [DialogService].
///
/// See the documentation for Mockito's code generation for more information.
class MockDialogService extends _i1.Mock implements _i41.DialogService {
  @override
  void registerCustomDialogBuilders(
          Map<dynamic, _i41.DialogBuilder>? builders) =>
      super.noSuchMethod(
          Invocation.method(#registerCustomDialogBuilders, [builders]),
          returnValueForMissingStub: null);
  @override
  void registerCustomDialogBuilder(
          {dynamic variant,
          _i42.Widget Function(_i42.BuildContext, _i41.DialogRequest<dynamic>,
                  dynamic Function(_i41.DialogResponse<dynamic>))?
              builder}) =>
      super.noSuchMethod(
          Invocation.method(#registerCustomDialogBuilder, [],
              {#variant: variant, #builder: builder}),
          returnValueForMissingStub: null);
  @override
  _i17.Future<_i41.DialogResponse<dynamic>?> showDialog(
          {String? title,
          String? description,
          String? cancelTitle,
          _i44.Color? cancelTitleColor,
          String? buttonTitle = r'Ok',
          _i44.Color? buttonTitleColor,
          bool? barrierDismissible = false,
          _i41.DialogPlatform? dialogPlatform}) =>
      (super.noSuchMethod(
              Invocation.method(#showDialog, [], {
                #title: title,
                #description: description,
                #cancelTitle: cancelTitle,
                #cancelTitleColor: cancelTitleColor,
                #buttonTitle: buttonTitle,
                #buttonTitleColor: buttonTitleColor,
                #barrierDismissible: barrierDismissible,
                #dialogPlatform: dialogPlatform
              }),
              returnValue: Future<_i41.DialogResponse<dynamic>?>.value())
          as _i17.Future<_i41.DialogResponse<dynamic>?>);
  @override
  _i17.Future<_i41.DialogResponse<T>?> showCustomDialog<T, R>(
          {dynamic variant,
          String? title,
          String? description,
          bool? hasImage = false,
          String? imageUrl,
          bool? showIconInMainButton = false,
          String? mainButtonTitle,
          bool? showIconInSecondaryButton = false,
          String? secondaryButtonTitle,
          bool? showIconInAdditionalButton = false,
          String? additionalButtonTitle,
          bool? takesInput = false,
          _i44.Color? barrierColor = const _i44.Color(2315255808),
          bool? barrierDismissible = false,
          String? barrierLabel = r'',
          dynamic customData,
          R? data}) =>
      (super.noSuchMethod(
              Invocation.method(#showCustomDialog, [], {
                #variant: variant,
                #title: title,
                #description: description,
                #hasImage: hasImage,
                #imageUrl: imageUrl,
                #showIconInMainButton: showIconInMainButton,
                #mainButtonTitle: mainButtonTitle,
                #showIconInSecondaryButton: showIconInSecondaryButton,
                #secondaryButtonTitle: secondaryButtonTitle,
                #showIconInAdditionalButton: showIconInAdditionalButton,
                #additionalButtonTitle: additionalButtonTitle,
                #takesInput: takesInput,
                #barrierColor: barrierColor,
                #barrierDismissible: barrierDismissible,
                #barrierLabel: barrierLabel,
                #customData: customData,
                #data: data
              }),
              returnValue: Future<_i41.DialogResponse<T>?>.value())
          as _i17.Future<_i41.DialogResponse<T>?>);
  @override
  _i17.Future<_i41.DialogResponse<dynamic>?> showConfirmationDialog(
          {String? title,
          String? description,
          String? cancelTitle = r'Cancel',
          String? confirmationTitle = r'Ok',
          bool? barrierDismissible = false,
          _i41.DialogPlatform? dialogPlatform}) =>
      (super.noSuchMethod(
              Invocation.method(#showConfirmationDialog, [], {
                #title: title,
                #description: description,
                #cancelTitle: cancelTitle,
                #confirmationTitle: confirmationTitle,
                #barrierDismissible: barrierDismissible,
                #dialogPlatform: dialogPlatform
              }),
              returnValue: Future<_i41.DialogResponse<dynamic>?>.value())
          as _i17.Future<_i41.DialogResponse<dynamic>?>);
  @override
  void completeDialog(_i41.DialogResponse<dynamic>? response) =>
      super.noSuchMethod(Invocation.method(#completeDialog, [response]),
          returnValueForMissingStub: null);
  @override
  String toString() => super.toString();
}

/// A class which mocks [BottomSheetService].
///
/// See the documentation for Mockito's code generation for more information.
class MockBottomSheetService extends _i1.Mock
    implements _i41.BottomSheetService {
  @override
  void setCustomSheetBuilders(Map<dynamic, _i41.SheetBuilder>? builders) =>
      super.noSuchMethod(Invocation.method(#setCustomSheetBuilders, [builders]),
          returnValueForMissingStub: null);
  @override
  _i17.Future<_i41.SheetResponse<dynamic>?> showBottomSheet(
          {String? title,
          String? description,
          String? confirmButtonTitle = r'Ok',
          String? cancelButtonTitle,
          bool? enableDrag = true,
          bool? barrierDismissible = true,
          bool? isScrollControlled = false,
          Duration? exitBottomSheetDuration,
          Duration? enterBottomSheetDuration,
          bool? ignoreSafeArea}) =>
      (super.noSuchMethod(
              Invocation.method(#showBottomSheet, [], {
                #title: title,
                #description: description,
                #confirmButtonTitle: confirmButtonTitle,
                #cancelButtonTitle: cancelButtonTitle,
                #enableDrag: enableDrag,
                #barrierDismissible: barrierDismissible,
                #isScrollControlled: isScrollControlled,
                #exitBottomSheetDuration: exitBottomSheetDuration,
                #enterBottomSheetDuration: enterBottomSheetDuration,
                #ignoreSafeArea: ignoreSafeArea
              }),
              returnValue: Future<_i41.SheetResponse<dynamic>?>.value())
          as _i17.Future<_i41.SheetResponse<dynamic>?>);
  @override
  _i17.Future<_i41.SheetResponse<T>?> showCustomSheet<T, R>(
          {dynamic variant,
          String? title,
          String? description,
          bool? hasImage = false,
          String? imageUrl,
          bool? showIconInMainButton = false,
          String? mainButtonTitle,
          bool? showIconInSecondaryButton = false,
          String? secondaryButtonTitle,
          bool? showIconInAdditionalButton = false,
          String? additionalButtonTitle,
          bool? takesInput = false,
          _i44.Color? barrierColor = const _i44.Color(2315255808),
          bool? barrierDismissible = true,
          bool? isScrollControlled = false,
          String? barrierLabel = r'',
          dynamic customData,
          R? data,
          bool? enableDrag = true,
          Duration? exitBottomSheetDuration,
          Duration? enterBottomSheetDuration,
          bool? ignoreSafeArea}) =>
      (super.noSuchMethod(
              Invocation.method(#showCustomSheet, [], {
                #variant: variant,
                #title: title,
                #description: description,
                #hasImage: hasImage,
                #imageUrl: imageUrl,
                #showIconInMainButton: showIconInMainButton,
                #mainButtonTitle: mainButtonTitle,
                #showIconInSecondaryButton: showIconInSecondaryButton,
                #secondaryButtonTitle: secondaryButtonTitle,
                #showIconInAdditionalButton: showIconInAdditionalButton,
                #additionalButtonTitle: additionalButtonTitle,
                #takesInput: takesInput,
                #barrierColor: barrierColor,
                #barrierDismissible: barrierDismissible,
                #isScrollControlled: isScrollControlled,
                #barrierLabel: barrierLabel,
                #customData: customData,
                #data: data,
                #enableDrag: enableDrag,
                #exitBottomSheetDuration: exitBottomSheetDuration,
                #enterBottomSheetDuration: enterBottomSheetDuration,
                #ignoreSafeArea: ignoreSafeArea
              }),
              returnValue: Future<_i41.SheetResponse<T>?>.value())
          as _i17.Future<_i41.SheetResponse<T>?>);
  @override
  void completeSheet(_i41.SheetResponse<dynamic>? response) =>
      super.noSuchMethod(Invocation.method(#completeSheet, [response]),
          returnValueForMissingStub: null);
  @override
  String toString() => super.toString();
}

/// A class which mocks [FirebaseAuthenticationService].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirebaseAuthenticationService extends _i1.Mock
    implements _i13.FirebaseAuthenticationService {
  @override
  _i12.FirebaseAuth get firebaseAuth =>
      (super.noSuchMethod(Invocation.getter(#firebaseAuth),
          returnValue: _FakeFirebaseAuth_12()) as _i12.FirebaseAuth);
  @override
  bool get hasUser =>
      (super.noSuchMethod(Invocation.getter(#hasUser), returnValue: false)
          as bool);
  @override
  _i17.Stream<_i12.User?> get authStateChanges =>
      (super.noSuchMethod(Invocation.getter(#authStateChanges),
          returnValue: Stream<_i12.User?>.empty()) as _i17.Stream<_i12.User?>);
  @override
  _i17.Future<bool> emailExists(String? email) =>
      (super.noSuchMethod(Invocation.method(#emailExists, [email]),
          returnValue: Future<bool>.value(false)) as _i17.Future<bool>);
  @override
  _i17.Future<_i13.FirebaseAuthenticationResult> signInWithGoogle() =>
      (super.noSuchMethod(Invocation.method(#signInWithGoogle, []),
              returnValue: Future<_i13.FirebaseAuthenticationResult>.value(
                  _FakeFirebaseAuthenticationResult_13()))
          as _i17.Future<_i13.FirebaseAuthenticationResult>);
  @override
  _i17.Future<bool> isAppleSignInAvailable() =>
      (super.noSuchMethod(Invocation.method(#isAppleSignInAvailable, []),
          returnValue: Future<bool>.value(false)) as _i17.Future<bool>);
  @override
  _i17.Future<_i13.FirebaseAuthenticationResult> signInWithApple(
          {String? appleRedirectUri, String? appleClientId}) =>
      (super.noSuchMethod(
              Invocation.method(#signInWithApple, [], {
                #appleRedirectUri: appleRedirectUri,
                #appleClientId: appleClientId
              }),
              returnValue: Future<_i13.FirebaseAuthenticationResult>.value(
                  _FakeFirebaseAuthenticationResult_13()))
          as _i17.Future<_i13.FirebaseAuthenticationResult>);
  @override
  _i17.Future<_i13.FirebaseAuthenticationResult> loginAnonymously() =>
      (super.noSuchMethod(Invocation.method(#loginAnonymously, []),
              returnValue: Future<_i13.FirebaseAuthenticationResult>.value(
                  _FakeFirebaseAuthenticationResult_13()))
          as _i17.Future<_i13.FirebaseAuthenticationResult>);
  @override
  _i17.Future<_i13.FirebaseAuthenticationResult> loginWithEmail(
          {String? email, String? password}) =>
      (super.noSuchMethod(
              Invocation.method(
                  #loginWithEmail, [], {#email: email, #password: password}),
              returnValue: Future<_i13.FirebaseAuthenticationResult>.value(
                  _FakeFirebaseAuthenticationResult_13()))
          as _i17.Future<_i13.FirebaseAuthenticationResult>);
  @override
  _i17.Future<_i13.FirebaseAuthenticationResult> createAccountWithEmail(
          {String? email, String? password}) =>
      (super.noSuchMethod(
              Invocation.method(#createAccountWithEmail, [],
                  {#email: email, #password: password}),
              returnValue: Future<_i13.FirebaseAuthenticationResult>.value(
                  _FakeFirebaseAuthenticationResult_13()))
          as _i17.Future<_i13.FirebaseAuthenticationResult>);
  @override
  _i17.Future<dynamic> logout() =>
      (super.noSuchMethod(Invocation.method(#logout, []),
          returnValue: Future<dynamic>.value()) as _i17.Future<dynamic>);
  @override
  _i17.Future<dynamic> sendResetPasswordLink(String? email) =>
      (super.noSuchMethod(Invocation.method(#sendResetPasswordLink, [email]),
          returnValue: Future<dynamic>.value()) as _i17.Future<dynamic>);
  @override
  _i17.Future<dynamic> validatePassword(String? password) =>
      (super.noSuchMethod(Invocation.method(#validatePassword, [password]),
          returnValue: Future<dynamic>.value()) as _i17.Future<dynamic>);
  @override
  _i17.Future<dynamic> updatePassword(String? password) =>
      (super.noSuchMethod(Invocation.method(#updatePassword, [password]),
          returnValue: Future<dynamic>.value()) as _i17.Future<dynamic>);
  @override
  _i17.Future<dynamic> updateEmail(String? email) =>
      (super.noSuchMethod(Invocation.method(#updateEmail, [email]),
          returnValue: Future<dynamic>.value()) as _i17.Future<dynamic>);
  @override
  String generateNonce([int? length = 32]) =>
      (super.noSuchMethod(Invocation.method(#generateNonce, [length]),
          returnValue: '') as String);
  @override
  String sha256ofString(String? input) =>
      (super.noSuchMethod(Invocation.method(#sha256ofString, [input]),
          returnValue: '') as String);
  @override
  String toString() => super.toString();
}
